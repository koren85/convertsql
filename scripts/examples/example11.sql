IF OBJECT_ID('TEMP_FACT', 'U') IS NOT NULL
	DROP TABLE TEMP_FACT

IF OBJECT_ID('TEMP_FACT_UNION', 'U') IS NOT NULL
   DROP TABLE TEMP_FACT_UNION

IF OBJECT_ID(N'TEMP_FACT4', 'U') IS NOT NULL
  DROP TABLE TEMP_FACT4

IF OBJECT_ID('EGISSO_FACT_MONTH_RAYON', 'U') IS NOT NULL
  DROP TABLE EGISSO_FACT_MONTH_RAYON

IF NOT EXISTS (
  SELECT 1 FROM sys.indexes
  WHERE name = 'PARAM_COLLECT_FACT_MSP_LK_NPD' AND object_id = OBJECT_ID('EGISSO_NEW_PARAM_COLLECT_FACT'))
CREATE INDEX PARAM_COLLECT_FACT_MSP_LK_NPD
  ON EGISSO_NEW_PARAM_COLLECT_FACT (MSP_LK_NPD)
  ON [PRIMARY]

IF NOT EXISTS (
  SELECT 1 FROM sys.indexes
  WHERE name = 'PARAM_COLLECT_FACT_OUID_FACT' AND object_id = OBJECT_ID('EGISSO_NEW_PARAM_COLLECT_FACT'))
CREATE INDEX PARAM_COLLECT_FACT_OUID_FACT
  ON EGISSO_NEW_PARAM_COLLECT_FACT (A_GUID_SERV)
  ON [PRIMARY]

IF NOT EXISTS (
  SELECT 1 FROM sys.indexes
  WHERE name = 'IDX_PARAM_COLLECT_FACT_A_SHIFT' AND object_id = OBJECT_ID('EGISSO_NEW_PARAM_COLLECT_FACT'))
CREATE NONCLUSTERED INDEX IDX_PARAM_COLLECT_FACT_A_SHIFT
ON EGISSO_NEW_PARAM_COLLECT_FACT (A_SHIFT)

CREATE TABLE TEMP_FACT (
  MSZ INT NULL
 ,LKMSZ INT NULL
 ,MSPLKNPD VARCHAR(50) NULL
 ,STATUSPRIVELEGE INT NULL
 ,ID_FACT VARCHAR(50) NULL
 ,PERSON_LG VARCHAR(50) NULL
 ,SERVDATE DATETIME NULL
 ,STARTDATE DATETIME NULL
 ,LASTDATE DATETIME NULL
 ,SERVPAYAMOUNT_LASTDATE DATETIME NULL
 ,PERS_GUID VARCHAR(5000) NULL
 ,A_AMOUNT FLOAT NULL
 ,org VARCHAR(50) NULL
 ,A_HASH INT NULL
  /* Поля для неденежных МСП */
 ,A_NON_MONETARY_FORM_AMOUNT FLOAT NULL /* Размер (Количество) */
 ,A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT FLOAT NULL /* Эквивалент в рублях */
 ,A_CODE_PROVISION_FORM INT NULL
 ,A_PERIODICITY_CODE INT NULL
 ,A_STOPDATE DATETIME NULL
)

CREATE NONCLUSTERED INDEX IDX_TEMP_FACT_A_PERIODICITY_CODE
ON TEMP_FACT (A_PERIODICITY_CODE)
INCLUDE (MSZ, LKMSZ, ID_FACT, STARTDATE, LASTDATE, A_AMOUNT, A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT)

DECLARE @NoUchet INT
SET @NoUchet = (SELECT OUID FROM SPR_PC_STATUS WHERE A_CODE = 4)

IF (#A_IS_STATUS_LD# = 1)
  SET @NoUchet = 0
--IF (0 = 1)
--  SET @NoUchet = 0

DECLARE @approvedStatus INT
       ,@stopStatus INT
       ,@stayStatus INT

SET @approvedStatus = (SELECT A_ID FROM SPR_STATUS_PROCESS WHERE A_CODE = 100)
SET @stopStatus = (SELECT A_ID FROM SPR_STATUS_PROCESS WHERE A_CODE = 2)
SET @stayStatus = (SELECT A_ID FROM SPR_STATUS_PROCESS WHERE A_CODE = 1)
/* Если не установлена галочка "Анализировать приостанов", то назначения в статусе "Приостановление временное" не анализируются */
IF (#IS_STAY# = 0)
  SET @stayStatus = 0
--IF (0 = 0)
--  SET @stayStatus = 0

/* Исключить при сборе умершие лица-основания без снилса */
DECLARE @A_DEAD_CHILD_NO_SNILS BIT
SET @A_DEAD_CHILD_NO_SNILS = #A_DEAD_CHILD_NO_SNILS#
--SET @A_DEAD_CHILD_NO_SNILS = 1

DECLARE @type INT
SET @type = #type#
--SET @type = 1

DECLARE @endDateNull DATETIME
SET @endDateNull = CONVERT(DATETIME, '2100-01-01', 120)

DECLARE @getDate DATETIME
       ,@start_date DATETIME
       ,@end_date DATETIME

SET @getDate = DATEADD(MONTH, 1, GETDATE()) - DAY(DATEADD(MONTH, 1, GETDATE()))
SET @start_date = CASE WHEN YEAR(ISNULL(CONVERT(DATETIME, '#dateBegin#', 120), GETDATE())) < 1980 THEN GETDATE() ELSE CONVERT(DATETIME, '#dateBegin#', 120) END
--SET @start_date = CASE WHEN YEAR(ISNULL(CONVERT(DATETIME, '2018-01-01 12:00:00.0', 120), GETDATE())) < 1980 THEN GETDATE() ELSE CONVERT(DATETIME, '2018-01-01 12:00:00.0', 120) END

IF @start_date IS NULL OR @start_date = ''
  SET @start_date = @getDate

SET @end_date = @getDate

IF (DATEDIFF(DAY, @end_date, @start_date) > 0)
  SET @start_date = @end_date

IF (DATEDIFF(DAY, @start_date, @end_date) > 0)
  UPDATE EGISSO_NEW_PARAM_COLLECT_FACT
  SET A_SHIFT = 0
ELSE
  UPDATE EGISSO_NEW_PARAM_COLLECT_FACT
  SET A_SHIFT = 0
  WHERE A_SHIFT IS NULL


UPDATE EGISSO_NEW_PARAM_COLLECT_FACT
SET A_SOURCE_TYPE = @type
WHERE A_CODE_PROVISION_FORM = 1
AND A_SOURCE_TYPE IS NULL

/* Размер назначения
*/

INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, A_AMOUNT, org,
A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
  SELECT DISTINCT
    fc.OUID_MSZ MSZ
   ,fc.OUID_CAT LKMSZ
   ,snmc.GUID MSPLKNPD
   ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
   ,ess.GUID ID_FACT
   ,wpc.GUID PERSON_LG
   ,ess.A_SERVDATE SERVDATE
   ,wpa.A_DATESTART STARTDATE
   ,wpa.A_DATELAST LASTDATE
   ,ISNULL(wpa.A_AMOUNT, 0) A_AMOUNT
   ,sob.GUID org
   ,fc.A_CODE_PROVISION_FORM
   ,fc.A_PERIODICITY_CODE
  FROM SPR_NPD_MSP_CAT snmc
  INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
    ON fc.MSP_LK_NPD = snmc.GUID
  INNER JOIN ESRN_SERV_SERV ess
    ON snmc.A_ID = ess.A_SERV
  INNER JOIN WM_PERSONAL_CARD wpc
    ON ess.A_PERSONOUID = wpc.OUID
  INNER JOIN SPR_SERV_PERIOD ssp
    ON ess.OUID = ssp.A_SERV

  /* Размер назначения */
  INNER JOIN WM_SERVPAYAMOUNT wpa
    ON wpa.A_MSP = ess.OUID

  LEFT JOIN SPR_ORG_BASE sob
    ON ess.A_ORGNAME = sob.OUID

  WHERE fc.A_CODE_PROVISION_FORM = 1
  AND fc.A_SOURCE_TYPE = 1
  AND ess.A_STATUSPRIVELEGE IN (@approvedStatus, @stopStatus, @stayStatus)

  /* Период предоставления */
  AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
  AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0

  --AND DATEDIFF(DAY, wpa.A_DATESTART, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
  AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(wpa.A_DATELAST, DATEADD(MONTH, fc.A_SHIFT, @start_date))) >= 0

  AND wpc.A_PCSTATUS != @NoUchet

  AND fc.SQL_MSZ IS NULL
  AND fc.SQL_CAT IS NULL
  AND fc.A_SQL_AMOUNT IS NULL
  AND fc.OUID_MSZ IS NOT NULL
  AND fc.OUID_CAT IS NOT NULL
  AND ISNULL(fc.A_IS_GKU, 0) = 0
  AND NOT (ess.A_FACTS_ARCHIVED IS NOT NULL AND ess.A_FACTS_ARCHIVED != 0)

  AND ISNULL(snmc.A_STATUS, 10) = 10
  AND ISNULL(ess.A_STATUS, 10) = 10
  AND ISNULL(wpc.A_STATUS, 10) = 10
  AND ISNULL(ssp.A_STATUS, 10) = 10
  AND ISNULL(wpa.A_STATUS, 10) = 10


/* К начислению
*/

INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, A_AMOUNT, org,
A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
  SELECT DISTINCT
    fc.OUID_MSZ MSZ
   ,fc.OUID_CAT LKMSZ
   ,snmc.GUID MSPLKNPD
   ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
   ,ess.GUID ID_FACT
   ,wpc.GUID PERSON_LG
   ,ess.A_SERVDATE SERVDATE
   ,wsa.A_DATESTART STARTDATE
   ,wsa.A_DATELAST LASTDATE
   ,ISNULL(wsa.A_AMOUNT, 0) A_AMOUNT
   ,sob.GUID org
   ,fc.A_CODE_PROVISION_FORM
   ,fc.A_PERIODICITY_CODE
  FROM SPR_NPD_MSP_CAT snmc
  INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
    ON fc.MSP_LK_NPD = snmc.GUID
  INNER JOIN ESRN_SERV_SERV ess
    ON snmc.A_ID = ess.A_SERV
  INNER JOIN SPR_SERV_PERIOD ssp
    ON ess.OUID = ssp.A_SERV
  INNER JOIN WM_PERSONAL_CARD wpc
    ON ess.A_PERSONOUID = wpc.OUID

  /* К начислению */
  INNER JOIN WM_SERV_AMOUNT wsa
    ON ess.OUID = wsa.A_MSP

  LEFT JOIN SPR_ORG_BASE sob
    ON ess.A_ORGNAME = sob.OUID

  WHERE fc.A_CODE_PROVISION_FORM = 1
  AND fc.A_SOURCE_TYPE = 2
  AND ess.A_STATUSPRIVELEGE IN (@approvedStatus, @stopStatus, @stayStatus)

  /* Период предоставления */
  AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
  AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0

  --AND DATEDIFF(DAY, wsa.A_DATESTART, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
  AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(wsa.A_DATELAST, DATEADD(MONTH, fc.A_SHIFT, @start_date))) >= 0

  AND wpc.A_PCSTATUS != @NoUchet

  AND fc.SQL_MSZ IS NULL
  AND fc.SQL_CAT IS NULL
  AND fc.A_SQL_AMOUNT IS NULL
  AND fc.OUID_MSZ IS NOT NULL
  AND fc.OUID_CAT IS NOT NULL
  AND ISNULL(fc.A_IS_GKU, 0) = 0
  AND NOT (ess.A_FACTS_ARCHIVED IS NOT NULL AND ess.A_FACTS_ARCHIVED != 0)

  AND ISNULL(snmc.A_STATUS, 10) = 10
  AND ISNULL(ess.A_STATUS, 10) = 10
  AND ISNULL(wpc.A_STATUS, 10) = 10
  AND ISNULL(ssp.A_STATUS, 10) = 10
  AND ISNULL(wsa.A_STATUS, 10) = 10


/* Выплаты */
DECLARE @stClose INT
SET @stClose = (SELECT A_ID FROM SPR_STATUS_PAYMENT WHERE A_CODE = 10)

INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, A_AMOUNT, org,
A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
  SELECT
    x.MSZ
   ,x.LKMSZ
   ,x.MSPLKNPD
   ,x.STATUSPRIVELEGE
   ,x.ID_FACT
   ,x.PERSON_LG
   ,x.SERVDATE
   ,DATEADD(DAY, 1 - DAY(x.COMMON_DATE), x.COMMON_DATE) STARTDATE
   ,DATEADD(MONTH, 1, x.COMMON_DATE) - DAY(DATEADD(MONTH, 1, x.COMMON_DATE)) LASTDATE
   ,SUM(x.A_AMOUNT)
   ,x.org
   ,x.A_CODE_PROVISION_FORM
   ,x.A_PERIODICITY_CODE
  FROM (SELECT TOP 1 WITH TIES
      fc.OUID_MSZ MSZ
     ,fc.OUID_CAT LKMSZ
     ,snmc.GUID MSPLKNPD
     ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
     ,ess.GUID ID_FACT
     ,wpc.GUID PERSON_LG
     ,ess.A_SERVDATE SERVDATE
     ,CONVERT(DATETIME, STR(payHist.A_DOCYEAR, 4, 0) + '-' + STR(sm.A_CODE, 2, 0) + '-1 12:00:00.000', 120) COMMON_DATE
     ,ISNULL(paid.AMOUNT, 0) A_AMOUNT
     ,sob.GUID org
     ,fc.A_CODE_PROVISION_FORM
     ,fc.A_PERIODICITY_CODE
    FROM SPR_NPD_MSP_CAT snmc
    INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
      ON fc.MSP_LK_NPD = snmc.GUID
    INNER JOIN ESRN_SERV_SERV ess
      ON snmc.A_ID = ess.A_SERV
    INNER JOIN WM_PERSONAL_CARD wpc
      ON ess.A_PERSONOUID = wpc.OUID
    INNER JOIN SPR_SERV_PERIOD ssp
      ON ess.OUID = ssp.A_SERV

    /* Выплаты */
    INNER JOIN WM_PAY_CALC calc
      ON ess.OUID = calc.A_MSP
    INNER JOIN WM_PAIDAMOUNTS paid
      ON calc.OUID = paid.A_PAYCALC
    INNER JOIN PAYHISTORY payHist
      ON paid.OUID = payHist.A_PAIDAMOUNT
    INNER JOIN SPR_MONTH sm
      ON payHist.A_DOCMONTH = sm.A_ID

    LEFT JOIN SPR_ORG_BASE sob
      ON ess.A_ORGNAME = sob.OUID

    WHERE fc.A_CODE_PROVISION_FORM = 1
    AND fc.A_SOURCE_TYPE = 3
    AND ess.A_STATUSPRIVELEGE IN (@approvedStatus, @stopStatus, @stayStatus)
    AND paid.A_STATUSPRIVELEGE = @stClose

    /* Период предоставления */
    AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
    AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0

    --AND DATEDIFF(DAY, wpa.A_DATESTART, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
    AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(CONVERT(DATETIME, STR(payHist.A_DOCYEAR, 4, 0) + '-' + STR(sm.A_CODE, 2, 0) + '-1 12:00:00.000', 120), DATEADD(MONTH, fc.A_SHIFT, @start_date))) >= 0

    AND wpc.A_PCSTATUS != @NoUchet

    AND fc.SQL_MSZ IS NULL
    AND fc.SQL_CAT IS NULL
    AND fc.A_SQL_AMOUNT IS NULL
    AND fc.OUID_MSZ IS NOT NULL
    AND fc.OUID_CAT IS NOT NULL
    AND ISNULL(fc.A_IS_GKU, 0) = 0
    AND NOT (ess.A_FACTS_ARCHIVED IS NOT NULL
    AND ess.A_FACTS_ARCHIVED != 0)

    AND ISNULL(snmc.A_STATUS, 10) = 10
    AND ISNULL(ess.A_STATUS, 10) = 10
    AND ISNULL(wpc.A_STATUS, 10) = 10
    AND ISNULL(ssp.A_STATUS, 10) = 10
    AND ISNULL(calc.A_STATUS, 10) = 10
    AND ISNULL(paid.A_STATUS, 10) = 10
    AND ISNULL(payHist.A_STATUS, 10) = 10

    --AND paid.OUID = 477

    ORDER BY ROW_NUMBER() OVER (PARTITION BY
    paid.OUID
    ORDER BY payHist.A_DOCYEAR DESC, sm.A_CODE DESC, payHist.A_ID DESC)) x
  GROUP BY x.MSZ
          ,x.LKMSZ
          ,x.MSPLKNPD
          ,x.STATUSPRIVELEGE
          ,x.ID_FACT
          ,x.PERSON_LG
          ,x.SERVDATE
          ,x.COMMON_DATE
          ,x.org
          ,x.A_CODE_PROVISION_FORM
          ,x.A_PERIODICITY_CODE



DECLARE @subjectCod VARCHAR(255)
SET @subjectCod = (SELECT TOP 1
    subFed.A_CODE
  FROM REGISTER_CONFIG rc
  INNER JOIN ESRN_OSZN_DEP oszn
    ON rc.A_REG_ORGNAME = oszn.OUID
  INNER JOIN SPR_ORG_BASE sob
    ON oszn.OUID = sob.OUID
  INNER JOIN SPR_SUBJFED subFed
    ON sob.A_SUBFED = subFed.OUID
  WHERE EXISTS (SELECT
      1
    FROM SX_CONFIG sc
    WHERE rc.OUID = sc.OUID
    AND sc.A_ACTIVE = 1)
  AND ISNULL(sob.A_STATUS, 10) = 10)

/* https://redmine.bazis-itc.ru/issues/81643
  Минтруд Оптимизация по  объединению  сумм в один факт назначения
*/
IF (@subjectCod = '58')
BEGIN

  DELETE tf
    FROM TEMP_FACT tf
    INNER JOIN SPR_NPD_MSP_CAT snmc
      ON tf.MSPLKNPD = snmc.GUID
    INNER JOIN PPR_SERV msp
      ON snmc.A_MSP = msp.A_ID

    LEFT JOIN PPR_SERV parentMsp
      ON msp.A_PARENT = parentMsp.A_ID
      AND ISNULL(parentMsp.A_STATUS, 10) = 10

  WHERE (parentMsp.GUID IN ('cfa5c260-443f-4bcb-9c42-e98f166d1bc0', '9af4f17e-144f-42a1-9f48-44836191a6be', '6ce866a2-684f-4156-87da-74a69213b51d', '20505c15-7d36-4174-ad02-866fc6582a64')
    OR msp.GUID IN ('32ff736b-5616-4e89-a7de-0e8f508f29ec', '202be159-2ae1-4b42-b686-28c26cb38dbf'))
    AND ISNULL(msp.A_STATUS, 10) = 10

  IF OBJECT_ID('TEMP_FACT_GROUP_PENZA', 'U') IS NOT NULL
    DROP TABLE TEMP_FACT_GROUP_PENZA

  CREATE TABLE TEMP_FACT_GROUP_PENZA (
    MSZ INT NULL
   ,LKMSZ INT NULL
   ,MSPLKNPD VARCHAR(50) NULL
   ,STATUSPRIVELEGE INT NULL
   ,ID_FACT VARCHAR(50) NULL
   ,PERSON_LG VARCHAR(50) NULL
   ,SERVDATE INT NULL
   ,STARTDATE INT NULL
   ,LASTDATE INT NULL
   ,A_AMOUNT FLOAT NULL
   ,org VARCHAR(50) NULL
   ,petId INT NULL
   ,A_CODE_PROVISION_FORM INT NULL
   ,A_PERIODICITY_CODE INT NULL
  )


  IF (@type = 1)
  BEGIN

    INSERT INTO TEMP_FACT_GROUP_PENZA (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, A_AMOUNT, org, petId, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
      SELECT DISTINCT
        fc.OUID_MSZ MSZ
       ,fc.OUID_CAT LKMSZ
       ,snmc.GUID MSPLKNPD
       ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
       ,ess.GUID ID_FACT
       ,wpc.GUID PERSON_LG
       ,FLOOR(CAST(ess.A_SERVDATE AS FLOAT)) SERVDATE
       ,FLOOR(CAST(wpa.A_DATESTART AS FLOAT)) STARTDATE
       ,FLOOR(CAST(wpa.A_DATELAST AS FLOAT)) LASTDATE
       ,ISNULL(wpa.A_AMOUNT, 0) A_AMOUNT
       ,sob.GUID org
       ,wp.OUID
       ,fc.A_CODE_PROVISION_FORM
       ,fc.A_PERIODICITY_CODE
      FROM SPR_NPD_MSP_CAT snmc
      INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
        ON fc.MSP_LK_NPD = snmc.GUID
      INNER JOIN PPR_SERV msp
        ON snmc.A_MSP = msp.A_ID

      INNER JOIN ESRN_SERV_SERV ess
        ON snmc.A_ID = ess.A_SERV
      INNER JOIN WM_PETITION wp
        ON ess.A_REQUEST = wp.OUID
      INNER JOIN WM_PERSONAL_CARD wpc
        ON ess.A_PERSONOUID = wpc.OUID
      INNER JOIN SPR_SERV_PERIOD ssp
        ON ess.OUID = ssp.A_SERV

      /* Размер назначения */
      INNER JOIN WM_SERVPAYAMOUNT wpa
        ON wpa.A_MSP = ess.OUID

      LEFT JOIN PPR_SERV parentMsp
        ON msp.A_PARENT = parentMsp.A_ID
        AND ISNULL(parentMsp.A_STATUS, 10) = 10

      LEFT JOIN SPR_ORG_BASE sob
        ON ess.A_ORGNAME = sob.OUID

      WHERE fc.A_CODE_PROVISION_FORM = 1
      AND (parentMsp.GUID IN ('cfa5c260-443f-4bcb-9c42-e98f166d1bc0', '9af4f17e-144f-42a1-9f48-44836191a6be', '6ce866a2-684f-4156-87da-74a69213b51d', '20505c15-7d36-4174-ad02-866fc6582a64')
      OR msp.GUID IN ('32ff736b-5616-4e89-a7de-0e8f508f29ec', '202be159-2ae1-4b42-b686-28c26cb38dbf'))
      AND ess.A_STATUSPRIVELEGE IN (@approvedStatus, @stopStatus, @stayStatus)

      /* Период предоставления */
      AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
      AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0

      --AND DATEDIFF(DAY, wpa.A_DATESTART, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
      AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(wpa.A_DATELAST, DATEADD(MONTH, fc.A_SHIFT, @start_date))) >= 0

      AND wpc.A_PCSTATUS != @NoUchet

      AND NOT (ess.A_FACTS_ARCHIVED IS NOT NULL
      AND ess.A_FACTS_ARCHIVED != 0)

      AND ISNULL(snmc.A_STATUS, 10) = 10
      AND ISNULL(msp.A_STATUS, 10) = 10
      AND ISNULL(ess.A_STATUS, 10) = 10
      AND ISNULL(wp.A_STATUS, 10) = 10
      AND ISNULL(wpc.A_STATUS, 10) = 10
      AND ISNULL(ssp.A_STATUS, 10) = 10
      AND ISNULL(wpa.A_STATUS, 10) = 10

  END
  ELSE
  BEGIN

    INSERT INTO TEMP_FACT_GROUP_PENZA (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, A_AMOUNT, org, petId, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
      SELECT DISTINCT
        fc.OUID_MSZ MSZ
       ,fc.OUID_CAT LKMSZ
       ,snmc.GUID MSPLKNPD
       ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
       ,ess.GUID ID_FACT
       ,wpc.GUID PERSON_LG
       ,FLOOR(CAST(ess.A_SERVDATE AS FLOAT)) SERVDATE
       ,FLOOR(CAST(wsa.A_DATESTART AS FLOAT)) STARTDATE
       ,FLOOR(CAST(wsa.A_DATELAST AS FLOAT)) LASTDATE
       ,ISNULL(wsa.A_AMOUNT, 0) A_AMOUNT
       ,sob.GUID org
       ,wp.OUID
       ,fc.A_CODE_PROVISION_FORM
       ,fc.A_PERIODICITY_CODE
      FROM SPR_NPD_MSP_CAT snmc
      INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
        ON fc.MSP_LK_NPD = snmc.GUID
      INNER JOIN PPR_SERV msp
        ON snmc.A_MSP = msp.A_ID

      INNER JOIN ESRN_SERV_SERV ess
        ON snmc.A_ID = ess.A_SERV
      INNER JOIN WM_PETITION wp
        ON ess.A_REQUEST = wp.OUID
      INNER JOIN SPR_SERV_PERIOD ssp
        ON ess.OUID = ssp.A_SERV
      INNER JOIN WM_PERSONAL_CARD wpc
        ON ess.A_PERSONOUID = wpc.OUID

      /* К начислению */
      INNER JOIN WM_SERV_AMOUNT wsa
        ON ess.OUID = wsa.A_MSP

      LEFT JOIN PPR_SERV parentMsp
        ON msp.A_PARENT = parentMsp.A_ID
        AND ISNULL(parentMsp.A_STATUS, 10) = 10

      LEFT JOIN SPR_ORG_BASE sob
        ON ess.A_ORGNAME = sob.OUID

      WHERE fc.A_CODE_PROVISION_FORM = 1
      AND (parentMsp.GUID IN ('cfa5c260-443f-4bcb-9c42-e98f166d1bc0', '9af4f17e-144f-42a1-9f48-44836191a6be', '6ce866a2-684f-4156-87da-74a69213b51d', '20505c15-7d36-4174-ad02-866fc6582a64')
      OR msp.GUID IN ('32ff736b-5616-4e89-a7de-0e8f508f29ec', '202be159-2ae1-4b42-b686-28c26cb38dbf'))
      AND ess.A_STATUSPRIVELEGE IN (@approvedStatus, @stopStatus, @stayStatus)

      /* Период предоставления */
      AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
      AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0

      --AND DATEDIFF(DAY, wsa.A_DATESTART, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
      AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(wsa.A_DATELAST, DATEADD(MONTH, fc.A_SHIFT, @start_date))) >= 0

      AND wpc.A_PCSTATUS != @NoUchet

      AND NOT (ess.A_FACTS_ARCHIVED IS NOT NULL
      AND ess.A_FACTS_ARCHIVED != 0)

      AND ISNULL(snmc.A_STATUS, 10) = 10
      AND ISNULL(msp.A_STATUS, 10) = 10
      AND ISNULL(ess.A_STATUS, 10) = 10
      AND ISNULL(wp.A_STATUS, 10) = 10
      AND ISNULL(wpc.A_STATUS, 10) = 10
      AND ISNULL(ssp.A_STATUS, 10) = 10
      AND ISNULL(wsa.A_STATUS, 10) = 10

  END

  INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, A_AMOUNT, org,
  A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
    SELECT
      tmp.MSZ
     ,tmp.LKMSZ
     ,snmc.GUID MSPLKNPD
     ,tmp.STATUSPRIVELEGE
     ,tmp.ID_FACT
     ,tmp.PERSON_LG
     ,CAST(tmp.SERVDATE AS DATETIME) SERVDATE
     ,CAST(tmp.STARTDATE AS DATETIME) STARTDATE
     ,CAST(tmp.LASTDATE AS DATETIME) LASTDATE
     ,tmp.A_AMOUNT
     ,tmp.org
     ,tmp.A_CODE_PROVISION_FORM
     ,tmp.A_PERIODICITY_CODE
    FROM (SELECT
        tmp.MSZ
       ,tmp.LKMSZ
       ,tmp.STATUSPRIVELEGE
       ,MIN(tmp.ID_FACT) ID_FACT
       ,tmp.PERSON_LG
       ,tmp.SERVDATE
       ,tmp.STARTDATE
       ,tmp.LASTDATE
       ,CAST(SUM(tmp.A_AMOUNT) AS DECIMAL(10, 2)) A_AMOUNT
       ,tmp.org
       ,tmp.A_CODE_PROVISION_FORM
       ,tmp.A_PERIODICITY_CODE
      FROM TEMP_FACT_GROUP_PENZA tmp
      GROUP BY tmp.MSZ
              ,tmp.LKMSZ
              ,tmp.STATUSPRIVELEGE
              ,tmp.PERSON_LG
              ,tmp.SERVDATE
              ,tmp.STARTDATE
              ,tmp.LASTDATE
              ,tmp.org
              ,tmp.A_CODE_PROVISION_FORM
              ,tmp.A_PERIODICITY_CODE
              ,tmp.petId) tmp
    INNER JOIN ESRN_SERV_SERV ess
      ON tmp.ID_FACT = ess.GUID
    INNER JOIN SPR_NPD_MSP_CAT snmc
      ON ess.A_SERV = snmc.A_ID

END

DECLARE @startDateNull DATETIME
SET @startDateNull = CONVERT(DATETIME, '19000101', 120)

IF (@subjectCod = '33')
BEGIN

  DELETE tf
    FROM TEMP_FACT tf
    INNER JOIN SPR_NPD_MSP_CAT snmc
      ON tf.MSPLKNPD = snmc.GUID
    INNER JOIN PPR_SERV msp
      ON snmc.A_MSP = msp.A_ID

    INNER JOIN PPR_SERV parentMsp
      ON msp.A_PARENT = parentMsp.A_ID

  WHERE parentMsp.GUID IN ('9af4f17e-144f-42a1-9f48-44836191a6be', 'b3f2b096-356d-4d4e-b2b0-96356dad4efe')
    AND ISNULL(msp.A_STATUS, 10) = 10
    AND ISNULL(parentMsp.A_STATUS, 10) = 10

  IF OBJECT_ID('TEMP_FACT_GROUP_VLAD', 'U') IS NOT NULL
    DROP TABLE TEMP_FACT_GROUP_VLAD

  CREATE TABLE TEMP_FACT_GROUP_VLAD (
    MSZ INT NULL
   ,LKMSZ INT NULL
   ,MSPLKNPD VARCHAR(50) NULL
   ,STATUSPRIVELEGE INT NULL
   ,ID_FACT VARCHAR(50) NULL
   ,PERSON_LG VARCHAR(50) NULL
   ,childId INT NULL
   ,SERVDATE INT NULL
   ,STARTDATE INT NULL
   ,LASTDATE INT NULL
   ,MIN_STARTDATE_MSP INT NULL
   ,MAX_LASTDATE_MSP INT NULL
   ,A_AMOUNT FLOAT NULL
   ,org VARCHAR(50) NULL
   ,A_CODE_PROVISION_FORM INT NULL
   ,A_PERIODICITY_CODE INT NULL
  )


  IF (@type = 1)
  BEGIN

    INSERT INTO TEMP_FACT_GROUP_VLAD (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, childId, SERVDATE, STARTDATE, LASTDATE, MIN_STARTDATE_MSP, MAX_LASTDATE_MSP, A_AMOUNT, org, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
      SELECT DISTINCT
        fc.OUID_MSZ MSZ
       ,fc.OUID_CAT LKMSZ
       ,snmc.GUID MSPLKNPD
       ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
       ,ess.GUID ID_FACT
       ,wpc.GUID PERSON_LG
       ,child.OUID
       ,FLOOR(CAST(ess.A_SERVDATE AS FLOAT)) SERVDATE
       ,FLOOR(CAST(wpa.A_DATESTART AS FLOAT)) STARTDATE
       ,FLOOR(CAST(wpa.A_DATELAST AS FLOAT)) LASTDATE
       ,FLOOR(CAST((SELECT
            MIN(STARTDATE)
          FROM SPR_SERV_PERIOD
          WHERE A_SERV = ess.OUID
          AND ISNULL(A_STATUS, 10) = 10)
        AS FLOAT))
       ,FLOOR(CAST((SELECT
            MAX(ISNULL(A_LASTDATE, CONVERT(DATETIME, '9999-12-31', 120)))
          FROM SPR_SERV_PERIOD
          WHERE A_SERV = ess.OUID
          AND ISNULL(A_STATUS, 10) = 10)
        AS FLOAT))
       ,ISNULL(wpa.A_AMOUNT, 0) A_AMOUNT
       ,sob.GUID org
       ,fc.A_CODE_PROVISION_FORM
       ,fc.A_PERIODICITY_CODE
      FROM SPR_NPD_MSP_CAT snmc
      INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
        ON fc.MSP_LK_NPD = snmc.GUID
      INNER JOIN PPR_SERV msp
        ON snmc.A_MSP = msp.A_ID

      INNER JOIN ESRN_SERV_SERV ess
        ON snmc.A_ID = ess.A_SERV
      INNER JOIN WM_PERSONAL_CARD wpc
        ON ess.A_PERSONOUID = wpc.OUID
      INNER JOIN WM_PERSONAL_CARD child
        ON ess.A_CHILD = child.OUID
      INNER JOIN SPR_SERV_PERIOD ssp
        ON ess.OUID = ssp.A_SERV

      /* Размер назначения */
      INNER JOIN WM_SERVPAYAMOUNT wpa
        ON wpa.A_MSP = ess.OUID

      INNER JOIN PPR_SERV parentMsp
        ON msp.A_PARENT = parentMsp.A_ID
        AND ISNULL(parentMsp.A_STATUS, 10) = 10

      LEFT JOIN SPR_ORG_BASE sob
        ON ess.A_ORGNAME = sob.OUID

      WHERE fc.A_CODE_PROVISION_FORM = 1
      AND parentMsp.GUID IN ('9af4f17e-144f-42a1-9f48-44836191a6be', 'b3f2b096-356d-4d4e-b2b0-96356dad4efe')
      AND ess.A_STATUSPRIVELEGE IN (@approvedStatus, @stopStatus, @stayStatus)

      /* Период предоставления */
      AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
      AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0

      --AND DATEDIFF(DAY, wpa.A_DATESTART, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
      AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(wpa.A_DATELAST, DATEADD(MONTH, fc.A_SHIFT, @start_date))) >= 0

      AND wpc.A_PCSTATUS != @NoUchet

      AND NOT (ess.A_FACTS_ARCHIVED IS NOT NULL
      AND ess.A_FACTS_ARCHIVED != 0)

      AND ISNULL(snmc.A_STATUS, 10) = 10
      AND ISNULL(msp.A_STATUS, 10) = 10
      AND ISNULL(ess.A_STATUS, 10) = 10
      AND ISNULL(child.A_STATUS, 10) = 10
      AND ISNULL(wpc.A_STATUS, 10) = 10
      AND ISNULL(ssp.A_STATUS, 10) = 10
      AND ISNULL(wpa.A_STATUS, 10) = 10

  END
  ELSE
  BEGIN

    INSERT INTO TEMP_FACT_GROUP_VLAD (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, childId, SERVDATE, STARTDATE, LASTDATE, MIN_STARTDATE_MSP, MAX_LASTDATE_MSP, A_AMOUNT, org, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
      SELECT DISTINCT
        fc.OUID_MSZ MSZ
       ,fc.OUID_CAT LKMSZ
       ,snmc.GUID MSPLKNPD
       ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
       ,ess.GUID ID_FACT
       ,wpc.GUID PERSON_LG
       ,child.OUID
       ,FLOOR(CAST(ess.A_SERVDATE AS FLOAT)) SERVDATE
       ,FLOOR(CAST(wsa.A_DATESTART AS FLOAT)) STARTDATE
       ,FLOOR(CAST(wsa.A_DATELAST AS FLOAT)) LASTDATE
       ,FLOOR(CAST((SELECT
            MIN(STARTDATE)
          FROM SPR_SERV_PERIOD
          WHERE A_SERV = ess.OUID
          AND ISNULL(A_STATUS, 10) = 10)
        AS FLOAT))
       ,FLOOR(CAST((SELECT
            MAX(ISNULL(A_LASTDATE, CONVERT(DATETIME, '9999-12-31', 120)))
          FROM SPR_SERV_PERIOD
          WHERE A_SERV = ess.OUID
          AND ISNULL(A_STATUS, 10) = 10)
        AS FLOAT))
       ,ISNULL(wsa.A_AMOUNT, 0) A_AMOUNT
       ,sob.GUID org
       ,fc.A_CODE_PROVISION_FORM
       ,fc.A_PERIODICITY_CODE
      FROM SPR_NPD_MSP_CAT snmc
      INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
        ON fc.MSP_LK_NPD = snmc.GUID
      INNER JOIN PPR_SERV msp
        ON snmc.A_MSP = msp.A_ID

      INNER JOIN ESRN_SERV_SERV ess
        ON snmc.A_ID = ess.A_SERV
      INNER JOIN SPR_SERV_PERIOD ssp
        ON ess.OUID = ssp.A_SERV
      INNER JOIN WM_PERSONAL_CARD wpc
        ON ess.A_PERSONOUID = wpc.OUID
      INNER JOIN WM_PERSONAL_CARD child
        ON ess.A_CHILD = child.OUID

      /* К начислению */
      INNER JOIN WM_SERV_AMOUNT wsa
        ON ess.OUID = wsa.A_MSP

      INNER JOIN PPR_SERV parentMsp
        ON msp.A_PARENT = parentMsp.A_ID
        AND ISNULL(parentMsp.A_STATUS, 10) = 10

      LEFT JOIN SPR_ORG_BASE sob
        ON ess.A_ORGNAME = sob.OUID

      WHERE fc.A_CODE_PROVISION_FORM = 1
      AND parentMsp.GUID IN ('9af4f17e-144f-42a1-9f48-44836191a6be', 'b3f2b096-356d-4d4e-b2b0-96356dad4efe')
      AND ess.A_STATUSPRIVELEGE IN (@approvedStatus, @stopStatus, @stayStatus)

      /* Период предоставления */
      AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
      AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0

      --AND DATEDIFF(DAY, wsa.A_DATESTART, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
      AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(wsa.A_DATELAST, DATEADD(MONTH, fc.A_SHIFT, @start_date))) >= 0

      AND wpc.A_PCSTATUS != @NoUchet

      AND NOT (ess.A_FACTS_ARCHIVED IS NOT NULL
      AND ess.A_FACTS_ARCHIVED != 0)

      AND ISNULL(snmc.A_STATUS, 10) = 10
      AND ISNULL(msp.A_STATUS, 10) = 10
      AND ISNULL(ess.A_STATUS, 10) = 10
      AND ISNULL(child.A_STATUS, 10) = 10
      AND ISNULL(wpc.A_STATUS, 10) = 10
      AND ISNULL(ssp.A_STATUS, 10) = 10
      AND ISNULL(wsa.A_STATUS, 10) = 10

  END


  IF OBJECT_ID('tempdb..#spt_values_number_egisso') IS NOT NULL
    DROP TABLE #spt_values_number_egisso

  CREATE TABLE #spt_values_number_egisso (
    A_OUID INT IDENTITY (1, 1) NOT NULL PRIMARY KEY CLUSTERED
   ,number INT NOT NULL
  )

  INSERT INTO #spt_values_number_egisso (number)
    SELECT number FROM master..spt_values WHERE type = 'P'

  IF OBJECT_ID('tempdb..#TEMP_FACT_GROUP_VLAD_MONTH_02') IS NOT NULL
    DROP TABLE #TEMP_FACT_GROUP_VLAD_MONTH_02

  CREATE TABLE #TEMP_FACT_GROUP_VLAD_MONTH_02 (
    A_OUID INT IDENTITY (1, 1) NOT NULL PRIMARY KEY CLUSTERED
   ,ID_FACT VARCHAR(255) NULL
   ,MSZ INT NULL
   ,LKMSZ INT NULL
   ,PERSON_LG VARCHAR(50) NULL
   ,childId INT NULL
   ,STARTDATE DATETIME NULL
   ,LASTDATE DATETIME NULL
   ,d1 DATETIME NULL
   ,d2 DATETIME NULL
   ,A_AMOUNT FLOAT NULL
   ,MIN_STARTDATE_MSP INT NULL
   ,MAX_LASTDATE_MSP INT NULL
   ,org VARCHAR(50) NULL
   ,A_CODE_PROVISION_FORM INT NULL
   ,A_PERIODICITY_CODE INT NULL
   ,STATUSPRIVELEGE INT NULL
   ,IS_MAX_SERV BIT NULL
  )

  INSERT INTO #TEMP_FACT_GROUP_VLAD_MONTH_02 (ID_FACT, MSZ, LKMSZ, PERSON_LG, childId, STARTDATE, LASTDATE, d1, d2, A_AMOUNT, MIN_STARTDATE_MSP, MAX_LASTDATE_MSP, org, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, STATUSPRIVELEGE)
    SELECT
      tmp.ID_FACT
     ,tmp.MSZ
     ,tmp.LKMSZ
     ,tmp.PERSON_LG
     ,tmp.childId
     ,CAST(tmp.STARTDATE AS DATETIME) STARTDATE
     ,CAST(tmp.LASTDATE AS DATETIME) LASTDATE
     ,DATEADD(mm, DATEDIFF(mm, @startDateNull, tmp.STARTDATE) + number, @startDateNull) d1
     ,DATEADD(mm, DATEDIFF(mm, @startDateNull, tmp.STARTDATE) + number + 1, @startDateNull) - 1 d2
     ,tmp.A_AMOUNT
     ,tmp.MIN_STARTDATE_MSP
     ,tmp.MAX_LASTDATE_MSP
     ,tmp.org
     ,tmp.A_CODE_PROVISION_FORM
     ,tmp.A_PERIODICITY_CODE
     ,tmp.STATUSPRIVELEGE
    FROM TEMP_FACT_GROUP_VLAD tmp
    CROSS JOIN #spt_values_number_egisso
    WHERE number <= DATEDIFF(mm, tmp.STARTDATE, ISNULL(tmp.LASTDATE, tmp.STARTDATE))


  UPDATE #TEMP_FACT_GROUP_VLAD_MONTH_02
  SET d1 = STARTDATE
  WHERE DATEDIFF(DAY, d1, STARTDATE) > 0

  UPDATE #TEMP_FACT_GROUP_VLAD_MONTH_02
  SET d2 = LASTDATE
  WHERE DATEDIFF(DAY, LASTDATE, d2) > 0

  IF (@type = 1)
  BEGIN

    INSERT INTO #TEMP_FACT_GROUP_VLAD_MONTH_02 (ID_FACT, MSZ, LKMSZ, PERSON_LG, childId, STARTDATE, LASTDATE, d1, d2, A_AMOUNT, MIN_STARTDATE_MSP, MAX_LASTDATE_MSP, org, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, STATUSPRIVELEGE)
      SELECT DISTINCT
        tmp2.ID_FACT
       ,tmp2.MSZ
       ,tmp2.LKMSZ
       ,tmp2.PERSON_LG
       ,tmp2.childId
       ,tmp2.STARTDATE
       ,tmp2.LASTDATE
       ,tmp2.d1
       ,tmp1.d2
       ,tmp2.A_AMOUNT
       ,tmp2.MIN_STARTDATE_MSP
       ,tmp2.MAX_LASTDATE_MSP
       ,tmp2.org
       ,tmp2.A_CODE_PROVISION_FORM
       ,tmp2.A_PERIODICITY_CODE
       ,tmp2.STATUSPRIVELEGE
      FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp1
      INNER JOIN #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp2
        ON tmp1.PERSON_LG = tmp2.PERSON_LG
        AND tmp1.childId = tmp2.childId
        AND tmp1.MSZ = tmp2.MSZ
        AND tmp1.LKMSZ = tmp2.LKMSZ
      WHERE DATEDIFF(DAY, tmp1.d1, tmp2.d1) = 0
      AND DATEDIFF(DAY, tmp1.d2, tmp2.d2) > 0

    UPDATE tmp2
    SET d1 = DATEADD(DAY, 1, tmp1.d2)
    FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp1
    INNER JOIN #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp2
      ON tmp1.PERSON_LG = tmp2.PERSON_LG
      AND tmp1.childId = tmp2.childId
      AND tmp1.MSZ = tmp2.MSZ
      AND tmp1.LKMSZ = tmp2.LKMSZ
    WHERE DATEDIFF(DAY, tmp1.d1, tmp2.d1) = 0
    AND DATEDIFF(DAY, tmp1.d2, tmp2.d2) > 0

    INSERT INTO #TEMP_FACT_GROUP_VLAD_MONTH_02 (ID_FACT, MSZ, LKMSZ, PERSON_LG, childId, STARTDATE, LASTDATE, d1, d2, A_AMOUNT, MIN_STARTDATE_MSP, MAX_LASTDATE_MSP, org, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, STATUSPRIVELEGE)
      SELECT DISTINCT
        tmp2.ID_FACT
       ,tmp2.MSZ
       ,tmp2.LKMSZ
       ,tmp2.PERSON_LG
       ,tmp2.childId
       ,tmp2.STARTDATE
       ,tmp2.LASTDATE
       ,tmp1.d1
       ,tmp1.d2
       ,tmp2.A_AMOUNT
       ,tmp2.MIN_STARTDATE_MSP
       ,tmp2.MAX_LASTDATE_MSP
       ,tmp2.org
       ,tmp2.A_CODE_PROVISION_FORM
       ,tmp2.A_PERIODICITY_CODE
       ,tmp2.STATUSPRIVELEGE
      FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp1
      INNER JOIN #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp2
        ON tmp1.PERSON_LG = tmp2.PERSON_LG
        AND tmp1.childId = tmp2.childId
        AND tmp1.MSZ = tmp2.MSZ
        AND tmp1.LKMSZ = tmp2.LKMSZ
      WHERE DATEDIFF(DAY, tmp1.d2, tmp2.d2) = 0
      AND DATEDIFF(DAY, tmp2.d1, tmp1.d1) > 0

    UPDATE tmp2
    SET d2 = DATEADD(DAY, -1, tmp1.d1)
    FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp1
    INNER JOIN #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp2
      ON tmp1.PERSON_LG = tmp2.PERSON_LG
      AND tmp1.childId = tmp2.childId
      AND tmp1.MSZ = tmp2.MSZ
      AND tmp1.LKMSZ = tmp2.LKMSZ
    WHERE DATEDIFF(DAY, tmp1.d2, tmp2.d2) = 0
    AND DATEDIFF(DAY, tmp2.d1, tmp1.d1) > 0
  END
  ELSE
  BEGIN

    INSERT INTO #TEMP_FACT_GROUP_VLAD_MONTH_02 (ID_FACT, MSZ, LKMSZ, PERSON_LG, childId, STARTDATE, LASTDATE, d1, d2, A_AMOUNT, MIN_STARTDATE_MSP, MAX_LASTDATE_MSP, org, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, STATUSPRIVELEGE)
      SELECT DISTINCT
        tmp2.ID_FACT
       ,tmp2.MSZ
       ,tmp2.LKMSZ
       ,tmp2.PERSON_LG
       ,tmp2.childId
       ,tmp2.STARTDATE
       ,tmp2.LASTDATE
       ,tmp2.d1
       ,tmp1.d2
       ,CAST(tmp2.A_AMOUNT * (DAY(tmp1.d2) - DAY(tmp1.d1) + 1) / DAY(tmp2.d2) AS DECIMAL(10, 2))
       ,tmp2.MIN_STARTDATE_MSP
       ,tmp2.MAX_LASTDATE_MSP
       ,tmp2.org
       ,tmp2.A_CODE_PROVISION_FORM
       ,tmp2.A_PERIODICITY_CODE
       ,tmp2.STATUSPRIVELEGE
      FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp1
      INNER JOIN #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp2
        ON tmp1.PERSON_LG = tmp2.PERSON_LG
        AND tmp1.childId = tmp2.childId
        AND tmp1.MSZ = tmp2.MSZ
        AND tmp1.LKMSZ = tmp2.LKMSZ
      WHERE DATEDIFF(DAY, tmp1.d1, tmp2.d1) = 0
      AND DATEDIFF(DAY, tmp1.d2, tmp2.d2) > 0

    UPDATE tmp2
    SET d1 = DATEADD(DAY, 1, tmp1.d2)
       ,A_AMOUNT = CAST(tmp2.A_AMOUNT * (DAY(tmp2.d2) - DAY(DATEADD(DAY, 1, tmp1.d2)) + 1) / DAY(tmp2.d2) AS DECIMAL(10, 2))
    FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp1
    INNER JOIN #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp2
      ON tmp1.PERSON_LG = tmp2.PERSON_LG
      AND tmp1.childId = tmp2.childId
      AND tmp1.MSZ = tmp2.MSZ
      AND tmp1.LKMSZ = tmp2.LKMSZ
    WHERE DATEDIFF(DAY, tmp1.d1, tmp2.d1) = 0
    AND DATEDIFF(DAY, tmp1.d2, tmp2.d2) > 0

    INSERT INTO #TEMP_FACT_GROUP_VLAD_MONTH_02 (ID_FACT, MSZ, LKMSZ, PERSON_LG, childId, STARTDATE, LASTDATE, d1, d2, A_AMOUNT, MIN_STARTDATE_MSP, MAX_LASTDATE_MSP, org, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, STATUSPRIVELEGE)
      SELECT DISTINCT
        tmp2.ID_FACT
       ,tmp2.MSZ
       ,tmp2.LKMSZ
       ,tmp2.PERSON_LG
       ,tmp2.childId
       ,tmp2.STARTDATE
       ,tmp2.LASTDATE
       ,tmp1.d1
       ,tmp1.d2
       ,CAST(tmp2.A_AMOUNT * (DAY(tmp1.d2) - DAY(tmp1.d1) + 1) / DAY(tmp1.d2) AS DECIMAL(10, 2))
       ,tmp2.MIN_STARTDATE_MSP
       ,tmp2.MAX_LASTDATE_MSP
       ,tmp2.org
       ,tmp2.A_CODE_PROVISION_FORM
       ,tmp2.A_PERIODICITY_CODE
       ,tmp2.STATUSPRIVELEGE
      FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp1
      INNER JOIN #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp2
        ON tmp1.PERSON_LG = tmp2.PERSON_LG
        AND tmp1.childId = tmp2.childId
        AND tmp1.MSZ = tmp2.MSZ
        AND tmp1.LKMSZ = tmp2.LKMSZ
      WHERE DATEDIFF(DAY, tmp1.d2, tmp2.d2) = 0
      AND DATEDIFF(DAY, tmp2.d1, tmp1.d1) > 0

    UPDATE tmp2
    SET d2 = DATEADD(DAY, -1, tmp1.d1)
       ,A_AMOUNT = CAST(tmp2.A_AMOUNT * (DAY(DATEADD(DAY, -1, tmp1.d1)) - DAY(tmp2.d1) + 1) / DAY(tmp1.d2) AS DECIMAL(10, 2))
    FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp1
    INNER JOIN #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp2
      ON tmp1.PERSON_LG = tmp2.PERSON_LG
      AND tmp1.childId = tmp2.childId
      AND tmp1.MSZ = tmp2.MSZ
      AND tmp1.LKMSZ = tmp2.LKMSZ
    WHERE DATEDIFF(DAY, tmp1.d2, tmp2.d2) = 0
    AND DATEDIFF(DAY, tmp2.d1, tmp1.d1) > 0

  END

  IF OBJECT_ID('tempdb..#TEMP_FACT_GROUP_VLAD_CURS') IS NOT NULL
  DROP TABLE #TEMP_FACT_GROUP_VLAD_CURS

CREATE TABLE #TEMP_FACT_GROUP_VLAD_CURS (
  A_OUID INT IDENTITY (1, 1) NOT NULL PRIMARY KEY CLUSTERED
 ,PERSON_LG VARCHAR(50) NULL
 ,childId INT NULL
 ,MSZ INT NULL
 ,LKMSZ INT NULL
 ,MIN_STARTDATE_MSP INT NULL
 ,MAX_LASTDATE_MSP INT NULL
 ,IS_MAX_SERV BIT NULL
)

INSERT INTO #TEMP_FACT_GROUP_VLAD_CURS (PERSON_LG, childId, MSZ, LKMSZ, MIN_STARTDATE_MSP, MAX_LASTDATE_MSP)
  SELECT DISTINCT
    tmp.PERSON_LG
   ,tmp.childId
   ,tmp.MSZ
   ,tmp.LKMSZ
   ,tmp.MIN_STARTDATE_MSP
   ,tmp.MAX_LASTDATE_MSP
  FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp

DECLARE @PREV_OUID INT
       ,@PREV_PERSON_LG VARCHAR(50)
       ,@PREV_childId INT
       ,@PREV_MSZ INT
       ,@PREV_LKMSZ INT
       ,@PREV_MIN_STARTDATE_MSP INT
       ,@PREV_MAX_LASTDATE_MSP INT
       ,@CURRENT_OUID INT
       ,@CURRENT_PERSON_LG VARCHAR(50)
       ,@CURRENT_childId INT
       ,@CURRENT_MSZ INT
       ,@CURRENT_LKMSZ INT
       ,@CURRENT_MIN_STARTDATE_MSP INT
       ,@CURRENT_MAX_LASTDATE_MSP INT

DECLARE cur CURSOR FAST_FORWARD READ_ONLY LOCAL FOR
SELECT
  tmp.A_OUID
 ,tmp.PERSON_LG
 ,tmp.childId
 ,tmp.MSZ
 ,tmp.LKMSZ
 ,tmp.MIN_STARTDATE_MSP
 ,tmp.MAX_LASTDATE_MSP
FROM #TEMP_FACT_GROUP_VLAD_CURS tmp
ORDER BY tmp.PERSON_LG
, tmp.childId
, tmp.MSZ
, tmp.LKMSZ
, tmp.MIN_STARTDATE_MSP

OPEN cur

FETCH NEXT FROM cur INTO @PREV_OUID, @PREV_PERSON_LG, @PREV_childId, @PREV_MSZ, @PREV_LKMSZ, @PREV_MIN_STARTDATE_MSP, @PREV_MAX_LASTDATE_MSP

WHILE @@FETCH_STATUS = 0
BEGIN
  FETCH NEXT FROM cur INTO @CURRENT_OUID, @CURRENT_PERSON_LG, @CURRENT_childId, @CURRENT_MSZ, @CURRENT_LKMSZ, @CURRENT_MIN_STARTDATE_MSP, @CURRENT_MAX_LASTDATE_MSP

  IF (@PREV_PERSON_LG != @CURRENT_PERSON_LG
    OR ISNULL(@PREV_childId, 0) != ISNULL(@CURRENT_childId, 0)
    OR ISNULL(@PREV_MSZ, 0) != ISNULL(@CURRENT_MSZ, 0)
    OR ISNULL(@PREV_LKMSZ, 0) != ISNULL(@CURRENT_LKMSZ, 0))
  BEGIN

    UPDATE #TEMP_FACT_GROUP_VLAD_CURS
    SET IS_MAX_SERV = 1
    WHERE A_OUID = @PREV_OUID

  END

  ELSE
  BEGIN
    IF NOT (@CURRENT_MIN_STARTDATE_MSP BETWEEN @PREV_MIN_STARTDATE_MSP AND @PREV_MAX_LASTDATE_MSP)
      UPDATE #TEMP_FACT_GROUP_VLAD_CURS
      SET IS_MAX_SERV = 1
      WHERE A_OUID = @PREV_OUID

  END

  SET @PREV_OUID = @CURRENT_OUID
  SET @PREV_PERSON_LG = @CURRENT_PERSON_LG
  SET @PREV_childId = @CURRENT_childId
  SET @PREV_MSZ = @CURRENT_MSZ
  SET @PREV_LKMSZ = @CURRENT_LKMSZ
  SET @PREV_MIN_STARTDATE_MSP = @CURRENT_MIN_STARTDATE_MSP
  SET @PREV_MAX_LASTDATE_MSP = @CURRENT_MAX_LASTDATE_MSP
END

CLOSE cur
DEALLOCATE cur

UPDATE #TEMP_FACT_GROUP_VLAD_CURS
SET IS_MAX_SERV = 1
WHERE A_OUID = @PREV_OUID

UPDATE tmp
SET IS_MAX_SERV = tmp_curs.IS_MAX_SERV
FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp
INNER JOIN #TEMP_FACT_GROUP_VLAD_CURS tmp_curs
  ON tmp.PERSON_LG = tmp_curs.PERSON_LG
  AND ISNULL(tmp.childId, 0) = ISNULL(tmp_curs.childId, 0)
  AND ISNULL(tmp.MSZ, 0) = ISNULL(tmp_curs.MSZ, 0)
  AND ISNULL(tmp.LKMSZ, 0) = ISNULL(tmp_curs.LKMSZ, 0)
  AND tmp.MIN_STARTDATE_MSP = tmp_curs.MIN_STARTDATE_MSP
  AND tmp.MAX_LASTDATE_MSP = tmp_curs.MAX_LASTDATE_MSP
WHERE ISNULL(tmp_curs.IS_MAX_SERV, 0) = 1



UPDATE tmp
SET ID_FACT = x.NEW_ID_FACT
FROM (SELECT DISTINCT
    tmp.ID_FACT
   ,(SELECT
        MAX(tfg.ID_FACT)
      FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 tfg
      WHERE tfg.PERSON_LG = tmp.PERSON_LG
      AND ISNULL(tfg.childId, 0) = ISNULL(tmp.childId, 0)
      AND ISNULL(tfg.MSZ, 0) = ISNULL(tmp.MSZ, 0)
      AND ISNULL(tfg.LKMSZ, 0) = ISNULL(tmp.LKMSZ, 0)
      AND tfg.ID_FACT != tmp.ID_FACT
      AND tfg.IS_MAX_SERV = 1
AND (tfg.MAX_LASTDATE_MSP > tmp.MIN_STARTDATE_MSP
      AND tmp.MAX_LASTDATE_MSP > tfg.MIN_STARTDATE_MSP
      AND tfg.MIN_STARTDATE_MSP > tmp.MIN_STARTDATE_MSP
    )
  )

    NEW_ID_FACT
  FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp
  WHERE tmp.IS_MAX_SERV IS NULL) x

INNER JOIN #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp
  ON tmp.ID_FACT = x.ID_FACT
WHERE x.NEW_ID_FACT IS NOT NULL

UPDATE tmp
SET ID_FACT = tmp2.ID_FACT
FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp
INNER JOIN #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp2
  ON ISNULL(tmp.MSZ, 0) = ISNULL(tmp2.MSZ, 0)
  AND ISNULL(tmp.LKMSZ, 0) = ISNULL(tmp2.LKMSZ, 0)
  AND tmp.PERSON_LG = tmp2.PERSON_LG
  AND tmp.childId = tmp2.childId
  AND tmp.ID_FACT != tmp2.ID_FACT
  AND tmp2.ID_FACT = (SELECT
      MAX(max_tmp.ID_FACT)
    FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 max_tmp
    WHERE ISNULL(max_tmp.IS_MAX_SERV, 0) = 1
    AND max_tmp.person_lg = tmp2.person_lg
    AND max_tmp.childId = tmp2.childid
    AND ISNULL(max_tmp.MSZ, 0) = ISNULL(tmp2.MSZ, 0)
    AND ISNULL(max_tmp.LKMSZ, 0) = ISNULL(tmp2.LKMSZ, 0))
  AND tmp2.MAX_LASTDATE_MSP > tmp.MIN_STARTDATE_MSP
  AND tmp.MAX_LASTDATE_MSP > tmp2.MIN_STARTDATE_MSP



  INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, A_AMOUNT, org,
  A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
    SELECT
      tmp.MSZ
     ,tmp.LKMSZ
     ,snmc.GUID MSPLKNPD
     ,ess.A_STATUSPRIVELEGE
     ,tmp.ID_FACT
     ,tmp.PERSON_LG
     ,A_SERVDATE
     ,tmp.d1 STARTDATE
     ,tmp.d2 LASTDATE
     ,tmp.A_AMOUNT
     ,tmp.org
     ,tmp.A_CODE_PROVISION_FORM
     ,tmp.A_PERIODICITY_CODE
    FROM (SELECT
        tmp.MSZ
       ,tmp.LKMSZ
       ,MAX(tmp.ID_FACT) ID_FACT
       ,tmp.PERSON_LG
       ,tmp.d1
       ,tmp.d2
       ,CAST(SUM(tmp.A_AMOUNT) AS DECIMAL(10, 2)) A_AMOUNT
       ,tmp.org
       ,tmp.A_CODE_PROVISION_FORM
       ,tmp.A_PERIODICITY_CODE
      FROM #TEMP_FACT_GROUP_VLAD_MONTH_02 tmp
      GROUP BY tmp.MSZ
              ,tmp.LKMSZ
              ,tmp.PERSON_LG
              ,tmp.d1
              ,tmp.d2
              ,tmp.childId
              ,tmp.org
              ,tmp.A_CODE_PROVISION_FORM
              ,tmp.A_PERIODICITY_CODE) tmp
    INNER JOIN ESRN_SERV_SERV ess
      ON tmp.ID_FACT = ess.GUID
    INNER JOIN SPR_NPD_MSP_CAT snmc
      ON ess.A_SERV = snmc.A_ID

  IF OBJECT_ID('tempdb..#TEMP_FACT_GROUP_VLAD_MONTH_02') IS NOT NULL
    DROP TABLE #TEMP_FACT_GROUP_VLAD_MONTH_02

END

/* Для неденежных МСП (анализируется предоставленная помощь)
*/
INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, org,
A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
  SELECT
    x.MSZ
   ,x.LKMSZ
   ,x.MSPLKNPD
   ,x.STATUSPRIVELEGE
   ,x.ID_FACT
   ,x.PERSON_LG
   ,x.SERVDATE
   ,x.STARTDATE
   ,x.LASTDATE
   ,x.org
   ,SUM(x.A_NON_MONETARY_FORM_AMOUNT) A_NON_MONETARY_FORM_AMOUNT
   ,SUM(x.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT) A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
   ,x.A_CODE_PROVISION_FORM
   ,x.A_PERIODICITY_CODE
  FROM (SELECT DISTINCT
      fc.OUID_MSZ MSZ
     ,fc.OUID_CAT LKMSZ
     ,snmc.GUID MSPLKNPD
     ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
     ,ess.GUID ID_FACT
     ,wpc.GUID PERSON_LG
     ,ess.A_SERVDATE SERVDATE
     ,DATEADD(DAY, 1 - DAY(CONVERT(DATETIME, STR(natur.A_YEAR, 4, 0) + '-' + STR(natur.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120)), CONVERT(DATETIME, STR(natur.A_YEAR, 4, 0) + '-' + STR(natur.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120))
      STARTDATE
     ,DATEADD(MONTH, 1, CONVERT(DATETIME, STR(natur.A_YEAR, 4, 0) + '-' + STR(natur.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120)) - DAY(DATEADD(MONTH, 1, CONVERT(DATETIME, STR(natur.A_YEAR, 4, 0) + '-' + STR(natur.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120)))
      LASTDATE
     ,sob.GUID org
      /* Для неденежных МСП */
     ,natur.A_AMOUNT A_NON_MONETARY_FORM_AMOUNT /* Размер */
     ,natur.A_WELL A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT /* Эквивалент в рублях */
     ,fc.A_CODE_PROVISION_FORM
     ,fc.A_PERIODICITY_CODE
    FROM SPR_NPD_MSP_CAT snmc
    INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
      ON fc.MSP_LK_NPD = snmc.GUID
    INNER JOIN PPR_SERV msp
      ON snmc.A_MSP = msp.A_ID
    INNER JOIN ESRN_SERV_SERV ess
      ON snmc.A_ID = ess.A_SERV
    INNER JOIN SPR_SERV_PERIOD ssp
      ON ess.OUID = ssp.A_SERV
    INNER JOIN WM_PERSONAL_CARD wpc
      ON ess.A_PERSONOUID = wpc.OUID
    INNER JOIN WM_PRIVELEGE natur
      ON ess.OUID = natur.A_PETITION

    LEFT JOIN SPR_ORG_BASE sob
      ON ess.A_ORGNAME = sob.OUID

    WHERE fc.A_CODE_PROVISION_FORM IN (2, 3)
    AND msp.GUID NOT IN ('4b3423aa-1986-44a1-a4d6-288aa72fd853', '9873b409-8d11-423d-88a6-3567b7733fe6')
    AND ess.A_STATUSPRIVELEGE IN (@approvedStatus, @stopStatus, @stayStatus)
    /* Поля "Размер (для неденежных МСП)" и "Эквивалент в рублях (для неденежных МСП)" должны быть не заполнены */
    AND snmc.A_AMOUNT_LGOTA IS NULL
    AND NOT EXISTS (SELECT
        1
      FROM PPR_FINANCE_UNIT pfu
      WHERE pfu.A_ID = snmc.A_SUMRUBFV
      AND ISNULL(pfu.A_STATUS, 10) = 10)

    AND DATEDIFF(MONTH, DATEADD(MONTH, fc.A_SHIFT, @start_date), CONVERT(DATETIME, STR(natur.A_YEAR, 4, 0) + '-' + STR(natur.A_PERIODMONTH, 2, 0) + '-1', 120)) >= 0
    --AND DATEDIFF(MONTH, CONVERT(DATETIME, STR(natur.A_YEAR, 4, 0) + '-' + STR(natur.A_PERIODMONTH, 2, 0) + '-1', 120), DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0

    AND natur.A_YEAR >= 1900
    AND natur.A_PERIODMONTH BETWEEN 1 AND 12

    AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
    AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0

    AND wpc.A_PCSTATUS != @NoUchet

    AND fc.SQL_MSZ IS NULL
    AND fc.SQL_CAT IS NULL
    AND fc.A_SQL_AMOUNT IS NULL
    AND fc.OUID_MSZ IS NOT NULL
    AND fc.OUID_CAT IS NOT NULL
    AND NOT (ess.A_FACTS_ARCHIVED IS NOT NULL
    AND ess.A_FACTS_ARCHIVED != 0)

    AND ISNULL(snmc.A_STATUS, 10) = 10
    AND ISNULL(ess.A_STATUS, 10) = 10
    AND ISNULL(wpc.A_STATUS, 10) = 10
    AND ISNULL(ssp.A_STATUS, 10) = 10
    AND ISNULL(natur.A_STATUS, 10) = 10
    AND ISNULL(msp.A_STATUS, 10) = 10) x
  GROUP BY x.MSZ
          ,x.LKMSZ
          ,x.MSPLKNPD
          ,x.STATUSPRIVELEGE
          ,x.ID_FACT
          ,x.PERSON_LG
          ,x.SERVDATE
          ,x.STARTDATE
          ,x.LASTDATE
          ,x.org
          ,x.A_CODE_PROVISION_FORM
          ,x.A_PERIODICITY_CODE


/* Для неденежных МСП (анализируются поля "Размер (для неденежных МСП)" и "Эквивалент в рублях (для неденежных МСП)" в МСП-ЛК-НПД)
*/
INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, org,
A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
  SELECT DISTINCT
    fc.OUID_MSZ MSZ
   ,fc.OUID_CAT LKMSZ
   ,snmc.GUID MSPLKNPD
   ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
   ,ess.GUID ID_FACT
   ,wpc.GUID PERSON_LG
   ,ess.A_SERVDATE SERVDATE
   ,CASE
      WHEN DATEDIFF(DAY, pfv.A_BEGIN_DATE, ssp.STARTDATE) > 0 THEN ssp.STARTDATE
      ELSE pfv.A_BEGIN_DATE
    END STARTDATE
   ,CASE
      WHEN DATEDIFF(DAY, ISNULL(ssp.A_LASTDATE, @endDateNull), ISNULL(pfv.A_END_DATE, @endDateNull)) > 0 THEN ssp.A_LASTDATE
      ELSE pfv.A_END_DATE
    END LASTDATE
   ,sob.GUID org
    /* Для неденежных МСП */
   ,snmc.A_AMOUNT_LGOTA A_NON_MONETARY_FORM_AMOUNT /* Размер */
   ,pfv.A_VALUE A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT /* Эквивалент в рублях */
   ,fc.A_CODE_PROVISION_FORM
   ,fc.A_PERIODICITY_CODE
  FROM SPR_NPD_MSP_CAT snmc
  INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
    ON fc.MSP_LK_NPD = snmc.GUID
  INNER JOIN ESRN_SERV_SERV ess
    ON snmc.A_ID = ess.A_SERV
  INNER JOIN SPR_SERV_PERIOD ssp
    ON ess.OUID = ssp.A_SERV
  INNER JOIN WM_PERSONAL_CARD wpc
    ON ess.A_PERSONOUID = wpc.OUID

  /* Эквивалент в рублях (финансовая величина) в МСП-ЛК-НПД */
  INNER JOIN PPR_FINANCE_UNIT pfu
    ON snmc.A_SUMRUBFV = pfu.A_ID
  INNER JOIN PPR_FINANCE_VALUE pfv
    ON pfu.A_ID = pfv.A_FINANCE_UNIT

  LEFT JOIN SPR_ORG_BASE sob
    ON ess.A_ORGNAME = sob.OUID

  WHERE fc.A_CODE_PROVISION_FORM IN (2, 3)
  AND ess.A_STATUSPRIVELEGE IN (@approvedStatus, @stopStatus, @stayStatus)

  --AND DATEDIFF(DAY, pfv.A_BEGIN_DATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
  AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(pfv.A_END_DATE, DATEADD(MONTH, fc.A_SHIFT, @start_date))) >= 0

  AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
  AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0

  AND wpc.A_PCSTATUS != @NoUchet

  AND fc.SQL_MSZ IS NULL
  AND fc.SQL_CAT IS NULL
  AND fc.A_SQL_AMOUNT IS NULL
  AND fc.OUID_MSZ IS NOT NULL
  AND fc.OUID_CAT IS NOT NULL
  AND NOT (ess.A_FACTS_ARCHIVED IS NOT NULL AND ess.A_FACTS_ARCHIVED != 0)

  AND ISNULL(snmc.A_STATUS, 10) = 10
  AND ISNULL(ess.A_STATUS, 10) = 10
  AND ISNULL(wpc.A_STATUS, 10) = 10
  AND ISNULL(ssp.A_STATUS, 10) = 10
  AND ISNULL(pfu.A_STATUS, 10) = 10
  AND ISNULL(pfv.A_STATUS, 10) = 10


/* Если в поле "При определении эквивалента анализировать возраст лица, на основании данных которого сделано назначение" МСП-ЛК-НПД стоит галка,
то анализировать записи в таблице "Размер эквивалента в зависимости от возраста"
*/

IF OBJECT_ID('spt_values_number_egisso', 'U') IS NOT NULL
  DROP TABLE spt_values_number_egisso

CREATE TABLE spt_values_number_egisso (
  A_OUID INT IDENTITY (1, 1) NOT NULL PRIMARY KEY CLUSTERED
 ,number INT NOT NULL
)

INSERT INTO spt_values_number_egisso (number)
  SELECT
    number
  FROM master..spt_values
  WHERE type = 'P'


INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, org,
A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
  SELECT
    tt.MSZ
   ,tt.LKMSZ
   ,tt.MSPLKNPD
   ,tt.STATUSPRIVELEGE
   ,tt.ID_FACT
   ,tt.PERSON_LG
   ,tt.SERVDATE
   ,tt.dateStart STARTDATE
   ,tt.dateEnd LASTDATE
   ,tt.org
    /* Для неденежных МСП */
   ,amount.A_AMOUNT_LGOTA A_NON_MONETARY_FORM_AMOUNT /* Размер */
   ,(SELECT
        pfv.A_VALUE
      FROM PPR_FINANCE_UNIT pfu
      INNER JOIN PPR_FINANCE_VALUE pfv
        ON pfu.A_ID = pfv.A_FINANCE_UNIT
      WHERE amount.A_SUMRUBFV = pfu.A_ID
      AND DATEDIFF(MONTH, pfv.A_BEGIN_DATE, tt.dateStart) >= 0
      AND DATEDIFF(MONTH, tt.dateStart, ISNULL(pfv.A_END_DATE, @end_date)) >= 0
      AND ISNULL(pfv.A_STATUS, 10) = 10
      AND ISNULL(pfu.A_STATUS, 10) = 10)
    A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT /* Эквивалент в рублях */
   ,tt.A_CODE_PROVISION_FORM
   ,tt.A_PERIODICITY_CODE
  FROM (SELECT
      x.MSZ
     ,x.LKMSZ
     ,x.MSPLKNPD
     ,x.STATUSPRIVELEGE
     ,x.ID_FACT
     ,x.PERSON_LG
     ,x.SERVDATE
     ,x.dateStart
     ,x.dateEnd
     ,x.org
     ,x.A_CODE_PROVISION_FORM
     ,x.A_PERIODICITY_CODE
     ,x.BIRTHDATE
     ,x.snmcId

     ,DATEDIFF(YEAR, x.BIRTHDATE, x.dateStart) -
                                                CASE
                                                  WHEN (MONTH(x.BIRTHDATE) > MONTH(x.dateStart)) OR
                                                    (MONTH(x.BIRTHDATE) = MONTH(x.dateStart) AND
                                                    DAY(x.BIRTHDATE) > DAY(x.dateStart)) THEN 1
                                                  ELSE 0
                                                END childYear
     ,(DATEDIFF(MONTH, x.BIRTHDATE, x.dateStart) -
                                                  CASE
                                                    WHEN DAY(x.BIRTHDATE) > DAY(x.dateStart) THEN 1
                                                    ELSE 0
                                                  END) % 12 childMonth
    FROM (SELECT DISTINCT
        fc.OUID_MSZ MSZ
       ,fc.OUID_CAT LKMSZ
       ,snmc.GUID MSPLKNPD
       ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
       ,ess.GUID ID_FACT
       ,wpc.GUID PERSON_LG
       ,ess.A_SERVDATE SERVDATE
       ,DATEADD(MONTH, DATEDIFF(MONTH, @startDateNull, ssp.STARTDATE) + number, @startDateNull) dateStart
       ,DATEADD(MONTH, DATEDIFF(MONTH, @startDateNull, ssp.STARTDATE) + number + 1, @startDateNull) - 1 dateEnd
       ,sob.GUID org
       ,fc.A_CODE_PROVISION_FORM
       ,fc.A_PERIODICITY_CODE
       ,child.BIRTHDATE
       ,snmc.A_ID snmcId
       ,fc.A_SHIFT

      FROM SPR_NPD_MSP_CAT snmc
      INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
        ON fc.MSP_LK_NPD = snmc.GUID
      INNER JOIN ESRN_SERV_SERV ess
        ON snmc.A_ID = ess.A_SERV
      INNER JOIN SPR_SERV_PERIOD ssp
        ON ess.OUID = ssp.A_SERV

      CROSS JOIN spt_values_number_egisso

      INNER JOIN WM_PERSONAL_CARD wpc
        ON ess.A_PERSONOUID = wpc.OUID
      INNER JOIN WM_PERSONAL_CARD child
        ON ess.A_CHILD = child.OUID

      LEFT JOIN SPR_ORG_BASE sob
        ON ess.A_ORGNAME = sob.OUID

      WHERE fc.A_CODE_PROVISION_FORM IN (2, 3)
      AND ISNULL(snmc.A_ANALYZE_AGE, 0) = 1
      AND ess.A_STATUSPRIVELEGE IN (@approvedStatus, @stopStatus, @stayStatus)
      AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
      AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0
      AND wpc.A_PCSTATUS != @NoUchet

      AND number <= DATEDIFF(MONTH, ssp.STARTDATE, ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)))
      AND fc.SQL_MSZ IS NULL
      AND fc.SQL_CAT IS NULL
      AND fc.A_SQL_AMOUNT IS NULL
      AND fc.OUID_MSZ IS NOT NULL
      AND fc.OUID_CAT IS NOT NULL
      AND NOT (ess.A_FACTS_ARCHIVED IS NOT NULL AND ess.A_FACTS_ARCHIVED != 0)
      AND ISNULL(snmc.A_STATUS, 10) = 10
      AND ISNULL(ess.A_STATUS, 10) = 10
      AND ISNULL(ssp.A_STATUS, 10) = 10
      AND ISNULL(wpc.A_STATUS, 10) = 10
      AND ISNULL(child.A_STATUS, 10) = 10) x

    WHERE DATEDIFF(MONTH, DATEADD(MONTH, x.A_SHIFT, @start_date), x.dateStart) >= 0
    AND DATEDIFF(MONTH, x.dateStart, DATEADD(MONTH, x.A_SHIFT, @end_date)) >= 0) tt

  INNER JOIN LINK_NPDMSPCAT_EGISSOAMOUNTAGE linkMspAmountAge
    ON tt.snmcId = linkMspAmountAge.A_FROMID
  INNER JOIN EGISSO_MSP_LK_NPD_AMOUNT_AGE amount
    ON linkMspAmountAge.A_TOID = amount.A_OUID


  WHERE tt.childYear * 12 + tt.childMonth BETWEEN amount.A_AGE_BEGIN_YEAR * 12 + amount.A_AGE_BEGIN_MONTH
  AND ISNULL(amount.A_AGE_END_YEAR, 200) * 12 + ISNULL(amount.A_AGE_END_MONTH, 12)
  AND ISNULL(amount.A_STATUS, 10) = 10


/* https://redmine.bazis-itc.ru/issues/73377#note-17, https://redmine.bazis-itc.ru/issues/104958#note-14

сертификаты и путевки будут выгружаться с формой предоставления 03 (льгота).

в этом случае поле "Размер" должно заполняться следующим образом:

для МСП "Предоставление сертификата на приобретение путевки в организации отдыха на условиях частичной оплаты" и "Предоставление путевок в организации отдыха детей и их оздоровления" :
стоимость путевки из заезда, указанного в соответствующем заявлении МИНУС значение поля "Сумма к оплате" квитанции, указанной в соответствующем заявлении, деленное на значение финансовой величины
с кодом 'averageCostTrav', действующей на дату регистрации заявления.

поле "Эквивалент в рублях" должно заполняться следующим образом:
для МСП "Предоставление сертификата на приобретение путевки в организации отдыха на условиях частичной оплаты" : значение поля "Номинал сертификата" соответствующего назначения.
для МСП "Предоставление путевок в организации отдыха детей и их оздоровления": значение поля "Стоимость путевки" заезда, указанного в соответствующем заявлении МИНУС
значение поля "Сумма к оплате" квитанции, указанной в соответствующем заявлении
*/

IF OBJECT_ID('PET_MSP_PASS_SERT', 'U') IS NOT NULL
BEGIN

  DECLARE @mspProvisionCertId INT
  SELECT @mspProvisionCertId = ps.A_ID FROM PPR_SERV ps WHERE ps.GUID = '4b3423aa-1986-44a1-a4d6-288aa72fd853'

  INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, org,
  A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
    SELECT DISTINCT
      fc.OUID_MSZ MSZ
     ,fc.OUID_CAT LKMSZ
     ,snmc.GUID MSPLKNPD
     ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
     ,ess.GUID AS ID_FACT
     ,wpc.GUID AS PERSON_LG
     ,ess.A_SERVDATE SERVDATE
     ,ssp.STARTDATE
     ,ssp.A_LASTDATE LASTDATE
     ,sob.GUID org
      /* Для неденежных МСП */
     ,/*CAST(gp.A_PUT_PAY - ISNULL(receipt.A_SUM / NULLIF((SELECT TOP 1
          pfv.A_VALUE
        FROM PPR_FINANCE_UNIT pfu
        INNER JOIN PPR_FINANCE_VALUE pfv
          ON pfu.A_ID = pfv.A_FINANCE_UNIT
        WHERE pfu.A_CODE = 'averageCostTrav'
        AND DATEDIFF(DAY, pfv.A_BEGIN_DATE, DATEADD(MONTH, fc.A_SHIFT, wan.A_DATE_REG)) >= 0
        AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, wan.A_DATE_REG), ISNULL(pfv.A_END_DATE, DATEADD(MONTH, fc.A_SHIFT, wan.A_DATE_REG))) >= 0
        AND ISNULL(pfu.A_STATUS, 10) = 10
        AND ISNULL(pfv.A_STATUS, 10) = 10
        ORDER BY pfv.A_BEGIN_DATE DESC), 0.0), 0) AS DECIMAL(10, 2))*/1 A_NON_MONETARY_FORM_AMOUNT /* Размер */
     ,ess.A_SUM_SERT A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT /* Эквивалент в рублях */
     ,fc.A_CODE_PROVISION_FORM
     ,fc.A_PERIODICITY_CODE
    FROM SPR_NPD_MSP_CAT snmc
    INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
      ON fc.MSP_LK_NPD = snmc.GUID
    INNER JOIN PPR_SERV ps
      ON snmc.A_MSP = ps.A_ID
    INNER JOIN ESRN_SERV_SERV ess
      ON snmc.A_ID = ess.A_SERV

    INNER JOIN WM_PETITION wp
      ON ess.A_REQUEST = wp.OUID
    INNER JOIN WM_APPEAL_NEW wan
      ON wp.OUID = wan.OUID

    /* стоимость путевки из заезда, указанного в соответствующем заявлении */
    INNER JOIN WM_PETITION_ADVANCED dopCl
      ON dopCl.A_OUID = wp.A_ADVANCED_OBJ
    INNER JOIN PET_MSP_PASS_SERT pmps
      ON dopCl.A_OUID = pmps.A_OUID
    INNER JOIN GROUP_PASS gp
      ON pmps.A_ZAJ = gp.A_OUID

    /* значение поля "Сумма к оплате" квитанции, указанной в соответствующем заявлении */
    INNER JOIN PASS_RECEIPT receipt
      ON wp.OUID = receipt.A_PET

    INNER JOIN SPR_SERV_PERIOD ssp
      ON ess.OUID = ssp.A_SERV

    INNER JOIN WM_PERSONAL_CARD wpc
      ON ess.A_PERSONOUID = wpc.OUID
    LEFT JOIN SPR_ORG_BASE sob
      ON ess.A_ORGNAME = sob.OUID

    WHERE ps.A_ID = @mspProvisionCertId
    AND ess.A_STATUSPRIVELEGE IN (@approvedStatus, @stopStatus, @stayStatus)

    AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
    AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0
    AND wpc.A_PCSTATUS != @NoUchet
    AND (ess.A_FACTS_ARCHIVED IS NULL OR ess.A_FACTS_ARCHIVED = 0)

    AND ISNULL(wp.A_STATUS, 10) = 10
    AND ISNULL(dopCl.A_STATUS, 10) = 10
    AND ISNULL(gp.A_STATUS, 10) = 10
    AND ISNULL(receipt.A_STATUS, 10) = 10
    AND ISNULL(snmc.A_STATUS, 10) = 10
    AND ISNULL(ess.A_STATUS, 10) = 10
    AND ISNULL(ssp.A_STATUS, 10) = 10
    AND ISNULL(wpc.A_STATUS, 10) = 10


  DECLARE @mspProvisionVoucherId INT
  SELECT @mspProvisionVoucherId = ps.A_ID FROM PPR_SERV ps WHERE ps.GUID = '9873b409-8d11-423d-88a6-3567b7733fe6'


  INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, org,
  A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
    SELECT DISTINCT
      fc.OUID_MSZ MSZ
     ,fc.OUID_CAT LKMSZ
     ,snmc.GUID MSPLKNPD
     ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
     ,ess.GUID AS ID_FACT
     ,wpc.GUID AS PERSON_LG
     ,ess.A_SERVDATE SERVDATE
     ,ssp.STARTDATE
     ,ssp.A_LASTDATE LASTDATE
     ,sob.GUID org
      /* Для неденежных МСП */
     ,/*CAST(gp.A_PUT_PAY - ISNULL(receipt.A_SUM / NULLIF((SELECT TOP 1
          pfv.A_VALUE
        FROM PPR_FINANCE_UNIT pfu
        INNER JOIN PPR_FINANCE_VALUE pfv
          ON pfu.A_ID = pfv.A_FINANCE_UNIT
        WHERE pfu.A_CODE = 'averageCostTrav'
        AND DATEDIFF(DAY, pfv.A_BEGIN_DATE, DATEADD(MONTH, fc.A_SHIFT, wan.A_DATE_REG)) >= 0
        AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, wan.A_DATE_REG), ISNULL(pfv.A_END_DATE, DATEADD(MONTH, fc.A_SHIFT, wan.A_DATE_REG))) >= 0
        AND ISNULL(pfu.A_STATUS, 10) = 10
        AND ISNULL(pfv.A_STATUS, 10) = 10
        ORDER BY pfv.A_BEGIN_DATE DESC), 0.0), 0) AS DECIMAL(10, 2))*/1 A_NON_MONETARY_FORM_AMOUNT /* Размер */
     ,gp.A_PUT_PAY - receipt.A_SUM A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT /* Эквивалент в рублях */
     ,fc.A_CODE_PROVISION_FORM
     ,fc.A_PERIODICITY_CODE
    FROM SPR_NPD_MSP_CAT snmc
    INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
      ON fc.MSP_LK_NPD = snmc.GUID
    INNER JOIN PPR_SERV ps
      ON snmc.A_MSP = ps.A_ID
    INNER JOIN ESRN_SERV_SERV ess
      ON snmc.A_ID = ess.A_SERV

    INNER JOIN WM_PETITION wp
      ON ess.A_REQUEST = wp.OUID
    INNER JOIN WM_APPEAL_NEW wan
      ON wp.OUID = wan.OUID

    /* стоимость путевки из заезда, указанного в соответствующем заявлении */
    INNER JOIN WM_PETITION_ADVANCED dopCl
      ON dopCl.A_OUID = wp.A_ADVANCED_OBJ
    INNER JOIN PET_MSP_PASS_SERT pmps
      ON dopCl.A_OUID = pmps.A_OUID
    INNER JOIN GROUP_PASS gp
      ON pmps.A_ZAJ = gp.A_OUID

    /* значение поля "Сумма к оплате" квитанции, указанной в соответствующем заявлении */
    INNER JOIN PASS_RECEIPT receipt
      ON wp.OUID = receipt.A_PET

    INNER JOIN SPR_SERV_PERIOD ssp
      ON ess.OUID = ssp.A_SERV

    INNER JOIN WM_PERSONAL_CARD wpc
      ON ess.A_PERSONOUID = wpc.OUID
    LEFT JOIN SPR_ORG_BASE sob
      ON ess.A_ORGNAME = sob.OUID

    WHERE ps.A_ID = @mspProvisionVoucherId
    AND ess.A_STATUSPRIVELEGE IN (@approvedStatus, @stopStatus, @stayStatus)
    AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
    AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0
    AND wpc.A_PCSTATUS != @NoUchet
    AND (ess.A_FACTS_ARCHIVED IS NULL OR ess.A_FACTS_ARCHIVED = 0)

    AND ISNULL(wp.A_STATUS, 10) = 10
    AND ISNULL(dopCl.A_STATUS, 10) = 10
    AND ISNULL(gp.A_STATUS, 10) = 10
    AND ISNULL(receipt.A_STATUS, 10) = 10
    AND ISNULL(snmc.A_STATUS, 10) = 10
    AND ISNULL(ess.A_STATUS, 10) = 10
    AND ISNULL(ssp.A_STATUS, 10) = 10
    AND ISNULL(wpc.A_STATUS, 10) = 10


END


/* Сбор рамеров назначений по ЕДК ЖКУ из других классов (для Тамбова)
*/
IF (#A_IS_GKU# = 1)
--IF (0 = 1)
BEGIN
  /* Размер назначения */
  INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, A_AMOUNT, org,
  A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)

    SELECT DISTINCT
      fc.OUID_MSZ MSZ
     ,fc.OUID_CAT LKMSZ
     ,snmc.GUID MSPLKNPD
     ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
     ,ess.GUID ID_FACT
     ,wpc.GUID PERSON_LG
     ,ess.A_SERVDATE SERVDATE
     ,edkPc.A_DATESTART STARTDATE
     ,edkPc.A_DATELAST LASTDATE
     ,SUM(ISNULL(edkUsl.well, 0)) A_AMOUNT
     ,sob.GUID org
     ,fc.A_CODE_PROVISION_FORM
     ,fc.A_PERIODICITY_CODE
    FROM SPR_NPD_MSP_CAT snmc
    INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
      ON fc.MSP_LK_NPD = snmc.GUID
    INNER JOIN ESRN_SERV_SERV ess
      ON snmc.A_ID = ess.A_SERV
    INNER JOIN SPR_SERV_PERIOD ssp
      ON ess.OUID = ssp.A_SERV
    INNER JOIN WM_PERSONAL_CARD wpc
      ON ess.A_PERSONOUID = wpc.OUID

    /* Размер назначения */
    INNER JOIN TEMP_TABLE_EDK_EGISSO_PERSONAL_CARD edkPc
      ON ess.OUID = edkPc.A_SERV
    INNER JOIN TEMP_TABLE_EDK_EGISSO_USL edkUsl
      ON edkPc.A_OUID = edkUsl.A_IDLD

    LEFT JOIN SPR_ORG_BASE sob
      ON ess.A_ORGNAME = sob.OUID

    WHERE ess.A_STATUSPRIVELEGE IN (@approvedStatus, @stopStatus, @stayStatus)
    AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
    AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0
    AND ISNULL(fc.A_IS_GKU, 0) = 1
    AND wpc.A_PCSTATUS != @NoUchet
    AND edkPc.A_IDENT_STAT_NAZN = 'fullIdent'
    AND DATEDIFF(DAY, edkPc.A_DATESTART, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
    AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(edkPc.A_DATELAST, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0

    AND fc.SQL_MSZ IS NULL
    AND fc.SQL_CAT IS NULL
    AND fc.A_SQL_AMOUNT IS NULL
    AND fc.OUID_MSZ IS NOT NULL
    AND fc.OUID_CAT IS NOT NULL
    AND NOT (ess.A_FACTS_ARCHIVED IS NOT NULL AND ess.A_FACTS_ARCHIVED != 0)
    AND ISNULL(wpc.A_STATUS, 10) = 10
    AND ISNULL(snmc.A_STATUS, 10) = 10
    AND ISNULL(ess.A_STATUS, 10) = 10
    AND ISNULL(ssp.A_STATUS, 10) = 10
    AND ISNULL(edkPc.A_STATUS, 10) = 10
    AND ISNULL(edkUsl.A_STATUS, 10) = 10

    GROUP BY fc.OUID_MSZ
            ,fc.OUID_CAT
            ,snmc.GUID
            ,ess.A_STATUSPRIVELEGE
            ,ess.GUID
            ,wpc.GUID
            ,ess.A_SERVDATE
            ,edkPc.A_DATESTART
            ,edkPc.A_DATELAST
            ,sob.GUID
            ,fc.A_SHIFT
            ,ess.OUID
            ,fc.A_CODE_PROVISION_FORM
            ,fc.A_PERIODICITY_CODE
            ,wpc.BIRTHDATE

END

/* Электронные сертификаты */
IF (OBJECT_ID('WM_EL_CERTIFICATE', 'U') IS NOT NULL
  AND OBJECT_ID('WM_EL_CERTIFICATE_BASE', 'U') IS NOT NULL
  AND OBJECT_ID('WM_TRU_ITEMS', 'U') IS NOT NULL)
BEGIN
  /* Рязань */
  INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, org,
  A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
    SELECT DISTINCT
      fc.OUID_MSZ MSZ
     ,fc.OUID_CAT LKMSZ
     ,snmc.GUID MSPLKNPD
     ,elCertBase.GUID ID_FACT
     ,wpc.GUID PERSON_LG
     ,elCertBase.A_START_DATE SERVDATE
     ,elCertBase.A_START_DATE STARTDATE
     ,elCertBase.A_END_DATE LASTDATE
     ,sob.GUID org
      /* Для неденежных МСП */
     ,x.A_NON_MONETARY_FORM_AMOUNT /* Размер */
     ,x.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT /* Эквивалент в рублях */
     ,fc.A_CODE_PROVISION_FORM
     ,fc.A_PERIODICITY_CODE
    FROM WM_EL_CERTIFICATE elCert
    INNER JOIN WM_EL_CERTIFICATE_BASE elCertBase
      ON elCert.A_OUID = elCertBase.A_OUID
    INNER JOIN WM_PETITION wp
      ON elCert.A_PET_ID = wp.OUID
    INNER JOIN WM_APPEAL_NEW wan
      ON wp.OUID = wan.OUID
    INNER JOIN PPR_SERV msp
      ON wp.A_MSP = msp.A_ID
    INNER JOIN PPR_CAT lk
      ON wp.A_CATEGORY = lk.A_ID
    INNER JOIN SPR_NPD_MSP_CAT snmc
      ON msp.A_ID = snmc.A_MSP
      AND lk.A_ID = snmc.A_CATEGORY
    INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
      ON fc.MSP_LK_NPD = snmc.GUID
    INNER JOIN WM_PERSONAL_CARD wpc
      ON elCert.A_PC_ID = wpc.OUID

    INNER JOIN (SELECT
        truItem.A_LINK_ID
       ,SUM(truItem.A_COUNT) A_NON_MONETARY_FORM_AMOUNT
       ,CAST(SUM(CAST(truItem.A_AMOUNT AS FLOAT)) / 100 AS DECIMAL(10, 2)) A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
      FROM WM_TRU_ITEMS truItem
      WHERE truItem.A_LINK_ID IS NOT NULL
      AND ISNULL(truItem.A_STATUS, 10) = 10
      GROUP BY truItem.A_LINK_ID) x
      ON elCert.A_OUID = x.A_LINK_ID

    LEFT JOIN SPR_ORG_BASE sob
      ON wan.A_TO_ORG = sob.OUID

    WHERE fc.A_CODE_PROVISION_FORM = 2
    AND msp.GUID = '928ab525-8836-4194-8b9a-2aab76ea5b92'

    AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(elCertBase.A_END_DATE, DATEADD(MONTH, fc.A_SHIFT, @start_date))) >= 0

    AND wpc.A_PCSTATUS != @NoUchet
    AND fc.SQL_MSZ IS NULL
    AND fc.SQL_CAT IS NULL
    AND fc.A_SQL_AMOUNT IS NULL
    AND fc.OUID_MSZ IS NOT NULL
    AND fc.OUID_CAT IS NOT NULL
    AND ISNULL(elCertBase.A_STATUS, 10) = 10
    AND ISNULL(snmc.A_STATUS, 10) = 10
    AND ISNULL(msp.A_STATUS, 10) = 10
    AND ISNULL(lk.A_STATUS, 10) = 10
    AND ISNULL(wp.A_STATUS, 10) = 10
    AND ISNULL(wpc.A_STATUS, 10) = 10

  /* Пенза */
  INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, org,
  A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
    SELECT DISTINCT
      fc.OUID_MSZ MSZ
     ,fc.OUID_CAT LKMSZ
     ,snmc.GUID MSPLKNPD
     ,elCertBase.GUID ID_FACT
     ,wpc.GUID PERSON_LG
     ,elCertBase.A_START_DATE SERVDATE
     ,elCertBase.A_START_DATE STARTDATE
     ,elCertBase.A_END_DATE LASTDATE
     ,sob.GUID org
      /* Для неденежных МСП */
     ,x.A_NON_MONETARY_FORM_AMOUNT /* Размер */
     ,x.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT /* Эквивалент в рублях */
     ,fc.A_CODE_PROVISION_FORM
     ,fc.A_PERIODICITY_CODE
    FROM WM_EL_CERTIFICATE elCert
    INNER JOIN WM_EL_CERTIFICATE_BASE elCertBase
      ON elCert.A_OUID = elCertBase.A_OUID
    INNER JOIN WM_PETITION wp
      ON elCert.A_PET_ID = wp.OUID
    INNER JOIN WM_APPEAL_NEW wan
      ON wp.OUID = wan.OUID
    INNER JOIN PPR_SERV mspParent
      ON wp.A_MSP = mspParent.A_ID
    INNER JOIN PPR_SERV msp
      ON mspParent.A_ID = msp.A_PARENT
    INNER JOIN PPR_CAT lk
      ON wp.A_CATEGORY = lk.A_ID

    INNER JOIN SPR_NPD_MSP_CAT snmc
      ON msp.A_ID = snmc.A_MSP
      AND lk.A_ID = snmc.A_CATEGORY
    INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
      ON fc.MSP_LK_NPD = snmc.GUID
    INNER JOIN WM_PERSONAL_CARD wpc
      ON elCert.A_PC_ID = wpc.OUID
    INNER JOIN (SELECT
        truItem.A_LINK_ID
       ,SUM(truItem.A_COUNT) A_NON_MONETARY_FORM_AMOUNT
       ,CAST(SUM(CAST(truItem.A_AMOUNT AS FLOAT)) / 100 AS DECIMAL(10, 2)) A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
      FROM WM_TRU_ITEMS truItem
      WHERE truItem.A_LINK_ID IS NOT NULL
      AND ISNULL(truItem.A_STATUS, 10) = 10
      GROUP BY truItem.A_LINK_ID) x
      ON elCert.A_OUID = x.A_LINK_ID
    LEFT JOIN SPR_ORG_BASE sob
      ON wan.A_TO_ORG = sob.OUID
    WHERE fc.A_CODE_PROVISION_FORM = 2
    AND mspParent.GUID = 'b285bdc3-30dd-4fcc-ad9e-bd7f3f8ff868'
    AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(elCertBase.A_END_DATE, DATEADD(MONTH, fc.A_SHIFT, @start_date))) >= 0
    AND wpc.A_PCSTATUS != @NoUchet
    AND fc.SQL_MSZ IS NULL
    AND fc.SQL_CAT IS NULL
    AND fc.A_SQL_AMOUNT IS NULL
    AND fc.OUID_MSZ IS NOT NULL
    AND fc.OUID_CAT IS NOT NULL
    AND ISNULL(elCertBase.A_STATUS, 10) = 10
    AND ISNULL(snmc.A_STATUS, 10) = 10
    AND ISNULL(mspParent.A_STATUS, 10) = 10
    AND ISNULL(msp.A_STATUS, 10) = 10
    AND ISNULL(lk.A_STATUS, 10) = 10
    AND ISNULL(wp.A_STATUS, 10) = 10
    AND ISNULL(wpc.A_STATUS, 10) = 10

END

/* https://redmine.bazis-itc.ru/issues/89762#note-26
В сформированный факт должны выводиться сведения следующим образом:
из сертификата (если он присутствует в заявлении)
если сертификата нет, то из поля "Эквивалент в рублях" предоставленной помощи назначения.
*/
/* Рязань */
INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, org,
A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
  SELECT DISTINCT
    fc.OUID_MSZ MSZ
   ,fc.OUID_CAT LKMSZ
   ,snmc.GUID MSPLKNPD
   ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
   ,ess.GUID ID_FACT
   ,wpc.GUID PERSON_LG
   ,ess.A_SERVDATE SERVDATE
   ,DATEADD(DAY, 1 - DAY(CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120)), CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120))
    STARTDATE
   ,DATEADD(MONTH, 1, CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120)) - DAY(DATEADD(MONTH, 1, CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120)))
    LASTDATE
   ,sob.GUID org
    /* Для неденежных МСП */
   ,helpDone.A_AMOUNT A_NON_MONETARY_FORM_AMOUNT /* Размер */
   ,helpDone.A_WELL A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT /* Эквивалент в рублях */
   ,fc.A_CODE_PROVISION_FORM
   ,fc.A_PERIODICITY_CODE
  FROM SPR_NPD_MSP_CAT snmc
  INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
    ON fc.MSP_LK_NPD = snmc.GUID
  INNER JOIN ESRN_SERV_SERV ess
    ON snmc.A_ID = ess.A_SERV
  INNER JOIN SPR_SERV_PERIOD ssp
    ON ess.OUID = ssp.A_SERV
  INNER JOIN WM_PERSONAL_CARD wpc
    ON ess.A_PERSONOUID = wpc.OUID
  INNER JOIN WM_PRIVELEGE helpDone
    ON ess.OUID = helpDone.A_PETITION
  INNER JOIN PPR_SERV msp
    ON snmc.A_MSP = msp.A_ID

  LEFT JOIN SPR_ORG_BASE sob
    ON ess.A_ORGNAME = sob.OUID

  WHERE fc.A_CODE_PROVISION_FORM = 2
  AND msp.GUID = '928ab525-8836-4194-8b9a-2aab76ea5b92'

  AND DATEDIFF(MONTH, DATEADD(MONTH, fc.A_SHIFT, @start_date), CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1', 120)) >= 0
  --AND DATEDIFF(MONTH, CONVERT(DATETIME, STR(natur.A_YEAR, 4, 0) + '-' + STR(natur.A_PERIODMONTH, 2, 0) + '-1', 120), DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0

  AND helpDone.A_YEAR >= 1900
  AND helpDone.A_PERIODMONTH BETWEEN 1 AND 12

  AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
  AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0

  AND wpc.A_PCSTATUS != @NoUchet

  AND fc.SQL_MSZ IS NULL
  AND fc.SQL_CAT IS NULL
  AND fc.A_SQL_AMOUNT IS NULL
  AND fc.OUID_MSZ IS NOT NULL
  AND fc.OUID_CAT IS NOT NULL
  AND NOT (ess.A_FACTS_ARCHIVED IS NOT NULL AND ess.A_FACTS_ARCHIVED != 0)

  AND ISNULL(snmc.A_STATUS, 10) = 10
  AND ISNULL(msp.A_STATUS, 10) = 10
  AND ISNULL(ess.A_STATUS, 10) = 10
  AND ISNULL(wpc.A_STATUS, 10) = 10
  AND ISNULL(ssp.A_STATUS, 10) = 10
  AND ISNULL(helpDone.A_STATUS, 10) = 10

/* Пенза */
INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, org,
A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
  SELECT DISTINCT
    fc.OUID_MSZ MSZ
   ,fc.OUID_CAT LKMSZ
   ,snmc.GUID MSPLKNPD
   ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
   ,ess.GUID ID_FACT
   ,wpc.GUID PERSON_LG
   ,ess.A_SERVDATE SERVDATE
   ,DATEADD(DAY, 1 - DAY(CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120)), CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120))
    STARTDATE
   ,DATEADD(MONTH, 1, CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120)) - DAY(DATEADD(MONTH, 1, CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120)))
    LASTDATE
   ,sob.GUID org
    /* Для неденежных МСП */
   ,helpDone.A_AMOUNT A_NON_MONETARY_FORM_AMOUNT /* Размер */
   ,helpDone.A_WELL A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT /* Эквивалент в рублях */
   ,fc.A_CODE_PROVISION_FORM
   ,fc.A_PERIODICITY_CODE
  FROM SPR_NPD_MSP_CAT snmc
  INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
    ON fc.MSP_LK_NPD = snmc.GUID
  INNER JOIN PPR_SERV msp
    ON snmc.A_MSP = msp.A_ID
  INNER JOIN PPR_SERV mspParent
    ON msp.A_PARENT = mspParent.A_ID
  INNER JOIN ESRN_SERV_SERV ess
    ON snmc.A_ID = ess.A_SERV
  INNER JOIN SPR_SERV_PERIOD ssp
    ON ess.OUID = ssp.A_SERV
  INNER JOIN WM_PERSONAL_CARD wpc
    ON ess.A_PERSONOUID = wpc.OUID
  INNER JOIN WM_PRIVELEGE helpDone
    ON ess.OUID = helpDone.A_PETITION

  LEFT JOIN SPR_ORG_BASE sob
    ON ess.A_ORGNAME = sob.OUID

  WHERE fc.A_CODE_PROVISION_FORM = 2
  AND mspParent.GUID = 'b285bdc3-30dd-4fcc-ad9e-bd7f3f8ff868'

  AND DATEDIFF(MONTH, DATEADD(MONTH, fc.A_SHIFT, @start_date), CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1', 120)) >= 0
  --AND DATEDIFF(MONTH, CONVERT(DATETIME, STR(natur.A_YEAR, 4, 0) + '-' + STR(natur.A_PERIODMONTH, 2, 0) + '-1', 120), DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0

  AND helpDone.A_YEAR >= 1900
  AND helpDone.A_PERIODMONTH BETWEEN 1 AND 12

  AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
  AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0

  AND wpc.A_PCSTATUS != @NoUchet

  AND fc.SQL_MSZ IS NULL
  AND fc.SQL_CAT IS NULL
  AND fc.A_SQL_AMOUNT IS NULL
  AND fc.OUID_MSZ IS NOT NULL
  AND fc.OUID_CAT IS NOT NULL
  AND NOT (ess.A_FACTS_ARCHIVED IS NOT NULL AND ess.A_FACTS_ARCHIVED != 0)

  AND ISNULL(snmc.A_STATUS, 10) = 10
  AND ISNULL(msp.A_STATUS, 10) = 10
  AND ISNULL(mspParent.A_STATUS, 10) = 10
  AND ISNULL(ess.A_STATUS, 10) = 10
  AND ISNULL(wpc.A_STATUS, 10) = 10
  AND ISNULL(ssp.A_STATUS, 10) = 10
  AND ISNULL(helpDone.A_STATUS, 10) = 10


/* Электронные сертификаты НГ */
IF (OBJECT_ID('WM_EL_CERTIFICATE', 'U') IS NOT NULL
  AND OBJECT_ID('WM_EL_CERTIFICATE_BASE', 'U') IS NOT NULL)
BEGIN
  INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, org,
  A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
    SELECT DISTINCT
      fc.OUID_MSZ MSZ
     ,fc.OUID_CAT LKMSZ
     ,snmc.GUID MSPLKNPD
     ,elCertBase.GUID ID_FACT
     ,wpc.GUID PERSON_LG
     ,elCertBase.A_START_DATE SERVDATE
     ,elCertBase.A_START_DATE STARTDATE
     ,elCertBase.A_END_DATE LASTDATE
     ,sob.GUID org
      /* Для неденежных МСП */
     ,1 /* Размер */
     ,CAST((elCertBase.A_AMOUNT / 100.0) AS DECIMAL(10, 2)) /* Эквивалент в рублях */
     ,fc.A_CODE_PROVISION_FORM
     ,fc.A_PERIODICITY_CODE
    FROM WM_EL_CERTIFICATE elCert
    INNER JOIN WM_EL_CERTIFICATE_BASE elCertBase
      ON elCert.A_OUID = elCertBase.A_OUID
    INNER JOIN WM_PETITION wp
      ON elCert.A_PET_ID = wp.OUID
    INNER JOIN WM_APPEAL_NEW wan
      ON wp.OUID = wan.OUID
    INNER JOIN PPR_SERV msp
      ON wp.A_MSP = msp.A_ID
    INNER JOIN PPR_CAT lk
      ON wp.A_CATEGORY = lk.A_ID
    INNER JOIN SPR_NPD_MSP_CAT snmc
      ON msp.A_ID = snmc.A_MSP
      AND lk.A_ID = snmc.A_CATEGORY
    INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
      ON fc.MSP_LK_NPD = snmc.GUID
    INNER JOIN WM_PERSONAL_CARD wpc
      ON elCert.A_PC_ID = wpc.OUID

    LEFT JOIN SPR_ORG_BASE sob
      ON wan.A_TO_ORG = sob.OUID

    WHERE fc.A_CODE_PROVISION_FORM = 2
    AND msp.GUID IN ('5e5058ea-a2d3-4aa3-a361-00e31a26373d', '758b39ff-e568-46b0-9274-b1abe391f780')

    AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(elCertBase.A_END_DATE, DATEADD(MONTH, fc.A_SHIFT, @start_date))) >= 0

    AND wpc.A_PCSTATUS != @NoUchet
    AND fc.SQL_MSZ IS NULL
    AND fc.SQL_CAT IS NULL
    AND fc.A_SQL_AMOUNT IS NULL
    AND fc.OUID_MSZ IS NOT NULL
    AND fc.OUID_CAT IS NOT NULL
    AND ISNULL(elCertBase.A_STATUS, 10) = 10
    AND ISNULL(snmc.A_STATUS, 10) = 10
    AND ISNULL(msp.A_STATUS, 10) = 10
    AND ISNULL(lk.A_STATUS, 10) = 10
    AND ISNULL(wp.A_STATUS, 10) = 10
    AND ISNULL(wpc.A_STATUS, 10) = 10

END

/* В сформированный факт должны выводиться сведения следующим образом:
из сертификата (если он присутствует в заявлении)
если сертификата нет, то из поля "Эквивалент в рублях" предоставленной помощи назначения.
*/
INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, org,
A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE)
  SELECT DISTINCT
    fc.OUID_MSZ MSZ
   ,fc.OUID_CAT LKMSZ
   ,snmc.GUID MSPLKNPD
   ,ess.A_STATUSPRIVELEGE STATUSPRIVELEGE
   ,ess.GUID ID_FACT
   ,wpc.GUID PERSON_LG
   ,ess.A_SERVDATE SERVDATE
   ,DATEADD(DAY, 1 - DAY(CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120)), CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120))
    STARTDATE
   ,DATEADD(MONTH, 1, CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120)) - DAY(DATEADD(MONTH, 1, CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1 12:00:00.000', 120)))
    LASTDATE
   ,sob.GUID org
    /* Для неденежных МСП */
   ,1 /* Размер */
   ,helpDone.A_WELL A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT /* Эквивалент в рублях */
   ,fc.A_CODE_PROVISION_FORM
   ,fc.A_PERIODICITY_CODE
  FROM SPR_NPD_MSP_CAT snmc
  INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT fc
    ON fc.MSP_LK_NPD = snmc.GUID
  INNER JOIN ESRN_SERV_SERV ess
    ON snmc.A_ID = ess.A_SERV
  INNER JOIN SPR_SERV_PERIOD ssp
    ON ess.OUID = ssp.A_SERV
  INNER JOIN WM_PERSONAL_CARD wpc
    ON ess.A_PERSONOUID = wpc.OUID
  INNER JOIN WM_PRIVELEGE helpDone
    ON ess.OUID = helpDone.A_PETITION
  INNER JOIN PPR_SERV msp
    ON snmc.A_MSP = msp.A_ID

  LEFT JOIN SPR_ORG_BASE sob
    ON ess.A_ORGNAME = sob.OUID

  WHERE fc.A_CODE_PROVISION_FORM = 2
  AND msp.GUID IN ('5e5058ea-a2d3-4aa3-a361-00e31a26373d', '758b39ff-e568-46b0-9274-b1abe391f780')

  AND DATEDIFF(MONTH, DATEADD(MONTH, fc.A_SHIFT, @start_date), CONVERT(DATETIME, STR(helpDone.A_YEAR, 4, 0) + '-' + STR(helpDone.A_PERIODMONTH, 2, 0) + '-1', 120)) >= 0
  --AND DATEDIFF(MONTH, CONVERT(DATETIME, STR(natur.A_YEAR, 4, 0) + '-' + STR(natur.A_PERIODMONTH, 2, 0) + '-1', 120), DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0

  AND helpDone.A_YEAR >= 1900
  AND helpDone.A_PERIODMONTH BETWEEN 1 AND 12

  AND DATEDIFF(DAY, ssp.STARTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date)) >= 0
  AND DATEDIFF(DAY, DATEADD(MONTH, fc.A_SHIFT, @start_date), ISNULL(ssp.A_LASTDATE, DATEADD(MONTH, fc.A_SHIFT, @end_date))) >= 0

  AND wpc.A_PCSTATUS != @NoUchet

  AND fc.SQL_MSZ IS NULL
  AND fc.SQL_CAT IS NULL
  AND fc.A_SQL_AMOUNT IS NULL
  AND fc.OUID_MSZ IS NOT NULL
  AND fc.OUID_CAT IS NOT NULL
  AND NOT (ess.A_FACTS_ARCHIVED IS NOT NULL AND ess.A_FACTS_ARCHIVED != 0)

  AND ISNULL(snmc.A_STATUS, 10) = 10
  AND ISNULL(msp.A_STATUS, 10) = 10
  AND ISNULL(ess.A_STATUS, 10) = 10
  AND ISNULL(wpc.A_STATUS, 10) = 10
  AND ISNULL(ssp.A_STATUS, 10) = 10
  AND ISNULL(helpDone.A_STATUS, 10) = 10

/* Кусок кода также используется в настройке Сбор фактов с произвольной привязкой МСП-ЛК-НПД НАЧАЛО */

/* Если в КМСЗ не заполнено поле "Не учитывать Лицо, на основании данных ЛД", то собираем Лицо, на основании данных */
UPDATE tmpFact
SET PERS_GUID =
             CASE
               WHEN @A_DEAD_CHILD_NO_SNILS = 1 AND
                 wpcCHILD.A_DEATHDATE IS NOT NULL AND
                 wpcCHILD.A_SNILS IS NULL THEN NULL
               ELSE wpcCHILD.GUID
             END
FROM TEMP_FACT tmpFact
INNER JOIN ESRN_SERV_SERV ess
  ON tmpFact.ID_FACT = ess.GUID
INNER JOIN WM_PERSONAL_CARD wpcCHILD
  ON ess.A_CHILD = wpcCHILD.OUID

WHERE EXISTS (SELECT
    1
  FROM EGISSO_NEW_PARAM_COLLECT_FACT pcf
  WHERE tmpFact.MSPLKNPD = pcf.MSP_LK_NPD
  AND ISNULL(pcf.A_IS_CHOLD, 0) = 0)

  AND wpcCHILD.GUID != tmpFact.PERSON_LG

  AND ISNULL(wpcCHILD.A_STATUS, 10) = 10


/* Если в КМСЗ не заполнено поле "Не учитывать граждан, по которым проводится расчет", то собираем граждан, по которым проводится расчет */
UPDATE tmpFact
SET PERS_GUID = ISNULL(PERS_GUID + ',', '') + ISNULL(CAST(STUFF((SELECT DISTINCT
    ',' + wpc.GUID
  FROM SPR_LINK_SDD_PET spr_sdd
  INNER JOIN WM_PERSONAL_CARD wpc
    ON spr_sdd.TOID = wpc.OUID
  WHERE spr_sdd.FROMID = wp.OUID
  FOR XML PATH (''))
, 1, 1, '') AS VARCHAR(5000)), '')
FROM TEMP_FACT tmpFact
INNER JOIN ESRN_SERV_SERV ess
  ON tmpFact.ID_FACT = ess.GUID
INNER JOIN WM_PETITION wp
  ON ess.A_REQUEST = wp.OUID

WHERE EXISTS (SELECT
    1
  FROM EGISSO_NEW_PARAM_COLLECT_FACT pcf
  WHERE tmpFact.MSPLKNPD = pcf.MSP_LK_NPD
  AND ISNULL(pcf.A_IS_INCOM, 0) = 0)


/* Если в КМСЗ не заполнено поле "Не учитывать область распространения", то собираем область распространения */
UPDATE tmpFact
SET PERS_GUID = ISNULL(PERS_GUID + ',', '') + ISNULL(CAST(STUFF((SELECT DISTINCT
    ',' + wpc.GUID
  FROM SPR_LINK_MSP_PERSON serv_pers
  INNER JOIN WM_PERSONAL_CARD wpc
    ON serv_pers.TOID = wpc.OUID
  WHERE serv_pers.FROMID = ess.OUID
  --AND DATEDIFF(MONTH, ISNULL(serv_pers.A_START_DATE, DATEADD(MONTH, pcf.A_SHIFT, @start_date)), DATEADD(MONTH, pcf.A_SHIFT, @end_date)) >= 0
  AND DATEDIFF(MONTH, DATEADD(MONTH, pcf.A_SHIFT, @start_date), ISNULL(serv_pers.A_END_DATE, DATEADD(MONTH, pcf.A_SHIFT, @start_date))) >= 0
  AND wpc.GUID != tmpFact.PERSON_LG
  FOR XML PATH (''))
, 1, 1, '') AS VARCHAR(5000)), '')
FROM TEMP_FACT tmpFact
INNER JOIN ESRN_SERV_SERV ess
  ON tmpFact.ID_FACT = ess.GUID
INNER JOIN EGISSO_NEW_PARAM_COLLECT_FACT pcf
  ON tmpFact.MSPLKNPD = pcf.MSP_LK_NPD

WHERE ISNULL(pcf.A_IS_SPHERE, 0) = 0


/* Анализировать приостанов (если у назначения есть приостанов, то дату окончания факта брать дату приостанова) */
IF (#IS_STAY# = 1)
--IF (0 = 1)
BEGIN

  IF OBJECT_ID('TEMP_FACT_PRIOSTANOV', 'U') IS NOT NULL
    DROP TABLE TEMP_FACT_PRIOSTANOV

  CREATE TABLE TEMP_FACT_PRIOSTANOV (
    A_OUID INT IDENTITY (1, 1) NOT NULL PRIMARY KEY CLUSTERED
   ,MSZ INT
   ,LKMSZ INT
   ,MSPLKNPD VARCHAR(50)
   ,STATUSPRIVELEGE INT
   ,ID_FACT VARCHAR(50)
   ,PERSON_LG VARCHAR(50)
   ,SERVDATE DATETIME
   ,STARTDATE DATETIME
   ,LASTDATE DATETIME
   ,PERS_GUID VARCHAR(5000) NULL
   ,A_AMOUNT FLOAT
   ,org VARCHAR(50)
   ,A_HASH INT
    /* Для неденежных МСП */
   ,A_NON_MONETARY_FORM_AMOUNT FLOAT NULL /* Размер */
   ,A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT FLOAT NULL /* Эквивалент в рублях */
   ,A_CODE_PROVISION_FORM INT NULL
   ,A_PERIODICITY_CODE INT NULL
   ,A_STOPDATE DATETIME NULL
   ,PRIOSTANOV_ID INT NULL
   ,A_DATE_FINISH DATETIME NULL
   ,A_DATEENDFINISH DATETIME NULL
   ,STARTDATE_PARCE_LEFT DATETIME NULL
   ,LASTDATE_PARCE_LEFT DATETIME NULL
   ,STARTDATE_PARCE_RIGHT DATETIME NULL
   ,LASTDATE_PARCE_RIGHT DATETIME NULL
   ,PREVIOS_ID INT NULL
  )

  IF OBJECT_ID('tempdb..#TEMP_FACT_4') IS NOT NULL
    DROP TABLE #TEMP_FACT_4
  CREATE TABLE #TEMP_FACT_4 (
    MSZ INT NULL
   ,LKMSZ INT NULL
   ,MSPLKNPD VARCHAR(50)
   ,STATUSPRIVELEGE INT
   ,ID_FACT VARCHAR(50)
   ,PERSON_LG VARCHAR(50)
   ,SERVDATE DATETIME
   ,STARTDATE DATETIME
   ,LASTDATE DATETIME
   ,STARTDATE_PARCE_LEFT DATETIME
   ,LASTDATE_PARCE_LEFT DATETIME
   ,PERS_GUID VARCHAR(MAX)
   ,A_AMOUNT FLOAT
   ,org VARCHAR(50)
   ,A_HASH INT
   ,A_NON_MONETARY_FORM_AMOUNT FLOAT
   ,A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT FLOAT
   ,A_CODE_PROVISION_FORM INT
   ,A_PERIODICITY_CODE INT
   ,A_STOPDATE DATETIME
  )

  IF (#A_TYPE_STOP# = '10')
  BEGIN

    /* Определяем интервалы приостановов */
    INSERT INTO TEMP_FACT_PRIOSTANOV (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, PERS_GUID, A_AMOUNT, org, A_HASH, A_NON_MONETARY_FORM_AMOUNT,
    A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, A_STOPDATE, PRIOSTANOV_ID, A_DATE_FINISH, A_DATEENDFINISH, STARTDATE_PARCE_LEFT, LASTDATE_PARCE_LEFT,
    STARTDATE_PARCE_RIGHT, LASTDATE_PARCE_RIGHT, PREVIOS_ID)
      SELECT TOP 1 WITH TIES
        tf.MSZ
       ,tf.LKMSZ
       ,tf.MSPLKNPD
       ,tf.STATUSPRIVELEGE
       ,tf.ID_FACT
       ,tf.PERSON_LG
       ,tf.SERVDATE
       ,tf.STARTDATE
       ,tf.LASTDATE
       ,tf.PERS_GUID
       ,tf.A_AMOUNT
       ,tf.org
       ,tf.A_HASH
       ,tf.A_NON_MONETARY_FORM_AMOUNT
       ,tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
       ,tf.A_CODE_PROVISION_FORM
       ,tf.A_PERIODICITY_CODE
       ,tf.A_STOPDATE
       ,priostanov.OUID
       ,priostanov.A_DATE_FINISH
       ,priostanov.A_DATEENDFINISH
       ,NULL STARTDATE_PARCE_LEFT
       ,NULL LASTDATE_PARCE_LEFT
       ,NULL STARTDATE_PARCE_RIGHT
       ,NULL LASTDATE_PARCE_RIGHT
       ,NULL PREVIOS_ID
      FROM TEMP_FACT tf
      INNER JOIN ESRN_SERV_SERV ess
        ON tf.ID_FACT = ess.GUID
      /* Берем приостановления со статусом "Приостановление временное" */
      INNER JOIN WM_STOP_SERVSERV_HIST priostanov
        ON ess.OUID = priostanov.A_SERV
        AND priostanov.A_TYPE = '10'
        AND DATEDIFF(DAY, tf.STARTDATE, ISNULL(priostanov.A_DATEENDFINISH, @endDateNull)) >= 0
        AND DATEDIFF(DAY, priostanov.A_DATE_FINISH, ISNULL(tf.LASTDATE, @endDateNull)) >= 0
        AND ISNULL(priostanov.A_STATUS, 10) = 10
      ORDER BY ROW_NUMBER() OVER (PARTITION BY tf.MSZ
      , tf.LKMSZ
      , tf.MSPLKNPD
      , tf.STATUSPRIVELEGE
      , tf.ID_FACT
      , tf.PERSON_LG
      , tf.SERVDATE
      , tf.STARTDATE
      , tf.LASTDATE
      , tf.PERS_GUID
      , tf.A_AMOUNT
      , tf.org
      , tf.A_HASH
      , tf.A_NON_MONETARY_FORM_AMOUNT
      , tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
      , tf.A_CODE_PROVISION_FORM
      , tf.A_PERIODICITY_CODE, priostanov.A_DATE_FINISH
      , priostanov.A_DATEENDFINISH
      ORDER BY priostanov.A_CREATEDATE DESC)

    /* Дату окончания приостановления обновляем датой ближайшего возобновления */
    UPDATE tf2
    SET A_DATEENDFINISH = DATEADD(DAY, -1, t.A_DATE_FINISH)
    FROM TEMP_FACT_PRIOSTANOV tf2
    INNER JOIN (SELECT
        tf2.A_OUID
       ,MIN(vozob.A_DATE_FINISH) A_DATE_FINISH
      FROM TEMP_FACT_PRIOSTANOV tf2
      INNER JOIN ESRN_SERV_SERV ess
        ON tf2.ID_FACT = ess.GUID
      /* Возобновление */
      LEFT JOIN WM_STOP_SERVSERV_HIST vozob
        ON ess.OUID = vozob.A_SERV
        AND vozob.A_TYPE = '20'
        AND DATEDIFF(DAY, tf2.STARTDATE, ISNULL(vozob.A_DATEENDFINISH, @endDateNull)) >= 0
        AND DATEDIFF(DAY, vozob.A_DATE_FINISH, ISNULL(tf2.LASTDATE, @endDateNull)) >= 0
        AND ISNULL(vozob.A_STATUS, 10) = 10
        AND DATEDIFF(DAY, tf2.A_DATE_FINISH, vozob.A_DATE_FINISH) >= 0
        AND vozob.OUID > tf2.PRIOSTANOV_ID
      WHERE tf2.A_DATEENDFINISH IS NULL
      GROUP BY tf2.A_OUID) t
      ON tf2.A_OUID = t.A_OUID

    DELETE FROM TEMP_FACT_PRIOSTANOV
    WHERE DATEDIFF(DAY, ISNULL(A_DATEENDFINISH, @endDateNull), A_DATE_FINISH) >= 0

    UPDATE tf2
    SET PREVIOS_ID = t.PREVIOS_ID
    FROM TEMP_FACT_PRIOSTANOV tf2
    INNER JOIN (SELECT
        tf2.A_OUID
       ,MAX(tfPrev.A_OUID) PREVIOS_ID
      FROM TEMP_FACT_PRIOSTANOV tf2
      INNER JOIN TEMP_FACT_PRIOSTANOV tfPrev
        ON tf2.ID_FACT = tfPrev.ID_FACT
        AND DATEDIFF(DAY, tf2.STARTDATE, tfPrev.STARTDATE) = 0
        AND DATEDIFF(DAY, ISNULL(tf2.LASTDATE, @endDateNull), ISNULL(tfPrev.LASTDATE, @endDateNull)) = 0
        AND DATEDIFF(DAY, tfPrev.A_DATE_FINISH, tf2.A_DATE_FINISH) > 0
      GROUP BY tf2.A_OUID) t
      ON tf2.A_OUID = t.A_OUID

    /* Исключаем из периода размера назначения периоды приостановов */
    UPDATE tf2
    SET STARTDATE_PARCE_LEFT =
                              CASE
                                WHEN tfPrev.A_OUID IS NOT NULL THEN DATEADD(DAY, 1, tfPrev.A_DATEENDFINISH)
                                ELSE tf2.STARTDATE
                              END
       ,LASTDATE_PARCE_LEFT = DATEADD(DAY, -1, tf2.A_DATE_FINISH)
    FROM TEMP_FACT_PRIOSTANOV tf2
    LEFT JOIN TEMP_FACT_PRIOSTANOV tfPrev
      ON tf2.PREVIOS_ID = tfPrev.A_OUID

    UPDATE tf2
    SET STARTDATE_PARCE_RIGHT = DATEADD(DAY, 1, tf2.A_DATEENDFINISH)

       ,LASTDATE_PARCE_RIGHT =
                              CASE
                                WHEN tfNext.A_OUID IS NOT NULL THEN DATEADD(DAY, -1, tfNext.A_DATE_FINISH)
                                ELSE tf2.LASTDATE
                              END
    FROM TEMP_FACT_PRIOSTANOV tf2
    LEFT JOIN TEMP_FACT_PRIOSTANOV tfNext
      ON tf2.A_OUID = tfNext.PREVIOS_ID

    INSERT INTO #TEMP_FACT_4 (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, STARTDATE_PARCE_LEFT, LASTDATE_PARCE_LEFT, PERS_GUID, A_AMOUNT, org, A_HASH, A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, A_STOPDATE)
      SELECT
        tf.MSZ
       ,tf.LKMSZ
       ,tf.MSPLKNPD
       ,tf.STATUSPRIVELEGE
       ,tf.ID_FACT
       ,tf.PERSON_LG
       ,tf.SERVDATE
       ,tf.STARTDATE
       ,tf.LASTDATE
       ,tf.STARTDATE_PARCE_LEFT
       ,tf.LASTDATE_PARCE_LEFT
       ,tf.PERS_GUID
       ,tf.A_AMOUNT
       ,tf.org
       ,tf.A_HASH
        /* Для неденежных МСП */
       ,tf.A_NON_MONETARY_FORM_AMOUNT
       ,tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
       ,tf.A_CODE_PROVISION_FORM
       ,tf.A_PERIODICITY_CODE
       ,tf.A_STOPDATE
      FROM TEMP_FACT_PRIOSTANOV tf
      WHERE tf.STARTDATE_PARCE_LEFT IS NOT NULL
      UNION
      SELECT
        tf.MSZ
       ,tf.LKMSZ
       ,tf.MSPLKNPD
       ,tf.STATUSPRIVELEGE
       ,tf.ID_FACT
       ,tf.PERSON_LG
       ,tf.SERVDATE
       ,tf.STARTDATE
       ,tf.LASTDATE
       ,tf.STARTDATE_PARCE_RIGHT
       ,tf.LASTDATE_PARCE_RIGHT
       ,tf.PERS_GUID
       ,tf.A_AMOUNT
       ,tf.org
       ,tf.A_HASH
        /* Для неденежных МСП */
       ,tf.A_NON_MONETARY_FORM_AMOUNT
       ,tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
       ,tf.A_CODE_PROVISION_FORM
       ,tf.A_PERIODICITY_CODE
       ,tf.A_STOPDATE
      FROM TEMP_FACT_PRIOSTANOV tf
      WHERE tf.STARTDATE_PARCE_RIGHT IS NOT NULL

    /* Удаляем из первоначальной таблицы те записи, по которым отработали приостанов и дополняем записями с учетом приостановов */
    DELETE tf
      FROM TEMP_FACT tf
    WHERE EXISTS (SELECT
          1
        FROM #TEMP_FACT_4 tf3
        WHERE tf.ID_FACT = tf3.ID_FACT
        AND DATEDIFF(DAY, tf.STARTDATE, tf3.STARTDATE) = 0
        AND DATEDIFF(DAY, ISNULL(tf.LASTDATE, @endDateNull), ISNULL(tf3.LASTDATE, @endDateNull)) = 0)

    /* Удаляем возможные некорректные периоды и периоды больше месяца текущей даты */

    DELETE FROM #TEMP_FACT_4
    WHERE DATEDIFF(DAY, LASTDATE_PARCE_LEFT, STARTDATE_PARCE_LEFT) > 0
    --OR DATEDIFF(MONTH, @getDate, STARTDATE_PARCE_LEFT) > 0

    INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, PERS_GUID, A_AMOUNT, org, A_HASH, A_NON_MONETARY_FORM_AMOUNT,
    A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, A_STOPDATE)
      SELECT
        MSZ
       ,LKMSZ
       ,MSPLKNPD
       ,STATUSPRIVELEGE
       ,ID_FACT
       ,PERSON_LG
       ,SERVDATE
       ,STARTDATE_PARCE_LEFT
       ,LASTDATE_PARCE_LEFT
       ,PERS_GUID
       ,A_AMOUNT
       ,org
       ,A_HASH
        /* Для неденежных МСП */
       ,A_NON_MONETARY_FORM_AMOUNT
       ,A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
       ,A_CODE_PROVISION_FORM
       ,A_PERIODICITY_CODE
       ,A_STOPDATE
      FROM #TEMP_FACT_4

  END
  ELSE
  IF (#A_TYPE_STOP# = '20') /*анализируем приостанов из Прекращение/возобновление МСП - 82478*/
  BEGIN

    /* Определяем интервалы приостановов */


    DECLARE @mspStopType VARCHAR(255)
    SELECT
      @mspStopType = dataType.LOGICNAME
    FROM SXATTR attr
    INNER JOIN SXDATATYPE dataType
      ON attr.OUIDDATATYPE = dataType.OUID
    WHERE attr.[NAME] = 'mspStop'
      AND attr.OUIDSXCLASS = (SELECT s.OUID FROM SXCLASS s WHERE s.[NAME] = 'esrnServServ')

    IF (@mspStopType = 'ObjectsList')
    BEGIN
      EXECUTE ('
      DECLARE @endDateNull DATETIME
      SET @endDateNull = CONVERT(DATETIME, ''2100-01-01'', 120)
      INSERT INTO TEMP_FACT_PRIOSTANOV (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, PERS_GUID, A_AMOUNT, org, A_HASH, A_NON_MONETARY_FORM_AMOUNT,
      A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, A_STOPDATE, PRIOSTANOV_ID, A_DATE_FINISH, A_DATEENDFINISH, STARTDATE_PARCE_LEFT, LASTDATE_PARCE_LEFT,
      STARTDATE_PARCE_RIGHT, LASTDATE_PARCE_RIGHT, PREVIOS_ID)
        SELECT TOP 1 WITH TIES
          tf.MSZ
         ,tf.LKMSZ
         ,tf.MSPLKNPD
         ,tf.STATUSPRIVELEGE
         ,tf.ID_FACT
         ,tf.PERSON_LG
         ,tf.SERVDATE
         ,tf.STARTDATE
         ,tf.LASTDATE
         ,tf.PERS_GUID
         ,tf.A_AMOUNT
         ,tf.org
         ,tf.A_HASH
         ,tf.A_NON_MONETARY_FORM_AMOUNT
         ,tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
         ,tf.A_CODE_PROVISION_FORM
         ,tf.A_PERIODICITY_CODE
         ,tf.A_STOPDATE
         ,priostanov.OUID
         ,priostanov.A_DATE_FINISH
         ,priostanov.A_DATEENDFINISH
         ,NULL STARTDATE_PARCE_LEFT
         ,NULL LASTDATE_PARCE_LEFT
         ,NULL STARTDATE_PARCE_RIGHT
         ,NULL LASTDATE_PARCE_RIGHT
         ,NULL PREVIOS_ID
        FROM TEMP_FACT tf
        INNER JOIN ESRN_SERV_SERV ess
          ON tf.ID_FACT = ess.GUID
        /* Берем приостановления со статусом "Приостановление временное" */
        INNER JOIN SPR_STOPSERV_ESRNSERVSERV linkServStop
          ON ess.OUID = linkServStop.FROMID
        INNER JOIN WM_STOP_SERVSERV priostanov
          ON linkServStop.TOID = priostanov.OUID
          AND priostanov.A_TYPE = ''10''
          AND DATEDIFF(DAY, tf.STARTDATE, ISNULL(priostanov.A_DATEENDFINISH, @endDateNull)) >= 0
          AND DATEDIFF(DAY, priostanov.A_DATE_FINISH, ISNULL(tf.LASTDATE, @endDateNull)) >= 0
          AND ISNULL(priostanov.A_STATUS, 10) = 10
        ORDER BY ROW_NUMBER() OVER (PARTITION BY tf.MSZ
        , tf.LKMSZ
        , tf.MSPLKNPD
        , tf.STATUSPRIVELEGE
        , tf.ID_FACT
        , tf.PERSON_LG
        , tf.SERVDATE
        , tf.STARTDATE
        , tf.LASTDATE
        , tf.PERS_GUID
        , tf.A_AMOUNT
        , tf.org
        , tf.A_HASH
        , tf.A_NON_MONETARY_FORM_AMOUNT
        , tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
        , tf.A_CODE_PROVISION_FORM
        , tf.A_PERIODICITY_CODE, priostanov.A_DATE_FINISH
        , priostanov.A_DATEENDFINISH
        ORDER BY priostanov.A_CREATEDATE DESC)')
    END
    ELSE
    BEGIN
      EXECUTE ('
      DECLARE @endDateNull DATETIME
      SET @endDateNull = CONVERT(DATETIME, ''2100-01-01'', 120)
      INSERT INTO TEMP_FACT_PRIOSTANOV (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, PERS_GUID, A_AMOUNT, org, A_HASH, A_NON_MONETARY_FORM_AMOUNT,
      A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, A_STOPDATE, PRIOSTANOV_ID, A_DATE_FINISH, A_DATEENDFINISH, STARTDATE_PARCE_LEFT, LASTDATE_PARCE_LEFT,
      STARTDATE_PARCE_RIGHT, LASTDATE_PARCE_RIGHT, PREVIOS_ID)
        SELECT TOP 1 WITH TIES
          tf.MSZ
         ,tf.LKMSZ
         ,tf.MSPLKNPD
         ,tf.STATUSPRIVELEGE
         ,tf.ID_FACT
         ,tf.PERSON_LG
         ,tf.SERVDATE
         ,tf.STARTDATE
         ,tf.LASTDATE
         ,tf.PERS_GUID
         ,tf.A_AMOUNT
         ,tf.org
         ,tf.A_HASH
         ,tf.A_NON_MONETARY_FORM_AMOUNT
         ,tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
         ,tf.A_CODE_PROVISION_FORM
         ,tf.A_PERIODICITY_CODE
         ,tf.A_STOPDATE
         ,priostanov.OUID
         ,priostanov.A_DATE_FINISH
         ,priostanov.A_DATEENDFINISH
         ,NULL STARTDATE_PARCE_LEFT
         ,NULL LASTDATE_PARCE_LEFT
         ,NULL STARTDATE_PARCE_RIGHT
         ,NULL LASTDATE_PARCE_RIGHT
         ,NULL PREVIOS_ID
        FROM TEMP_FACT tf
        INNER JOIN ESRN_SERV_SERV ess
          ON tf.ID_FACT = ess.GUID
        /* Берем приостановления со статусом "Приостановление временное" */
        INNER JOIN WM_STOP_SERVSERV priostanov
          ON ess.OUID = priostanov.A_SERV
          AND priostanov.A_TYPE = ''10''
          AND DATEDIFF(DAY, tf.STARTDATE, ISNULL(priostanov.A_DATEENDFINISH, @endDateNull)) >= 0
          AND DATEDIFF(DAY, priostanov.A_DATE_FINISH, ISNULL(tf.LASTDATE, @endDateNull)) >= 0
          AND ISNULL(priostanov.A_STATUS, 10) = 10
        ORDER BY ROW_NUMBER() OVER (PARTITION BY tf.MSZ
        , tf.LKMSZ
        , tf.MSPLKNPD
        , tf.STATUSPRIVELEGE
        , tf.ID_FACT
        , tf.PERSON_LG
        , tf.SERVDATE
        , tf.STARTDATE
        , tf.LASTDATE
        , tf.PERS_GUID
        , tf.A_AMOUNT
        , tf.org
        , tf.A_HASH
        , tf.A_NON_MONETARY_FORM_AMOUNT
        , tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
        , tf.A_CODE_PROVISION_FORM
        , tf.A_PERIODICITY_CODE, priostanov.A_DATE_FINISH
        , priostanov.A_DATEENDFINISH
        ORDER BY priostanov.A_CREATEDATE DESC)
        ')
    END


--    INSERT INTO TEMP_FACT_PRIOSTANOV (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, PERS_GUID, A_AMOUNT, org, A_HASH, A_NON_MONETARY_FORM_AMOUNT,
--    A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, A_STOPDATE, PRIOSTANOV_ID, A_DATE_FINISH, A_DATEENDFINISH, STARTDATE_PARCE_LEFT, LASTDATE_PARCE_LEFT,
--    STARTDATE_PARCE_RIGHT, LASTDATE_PARCE_RIGHT, PREVIOS_ID)
--      SELECT TOP 1 WITH TIES
--        tf.MSZ
--       ,tf.LKMSZ
--       ,tf.MSPLKNPD
--       ,tf.STATUSPRIVELEGE
--       ,tf.ID_FACT
--       ,tf.PERSON_LG
--       ,tf.SERVDATE
--       ,tf.STARTDATE
--       ,tf.LASTDATE
--       ,tf.PERS_GUID
--       ,tf.A_AMOUNT
--       ,tf.org
--       ,tf.A_HASH
--       ,tf.A_NON_MONETARY_FORM_AMOUNT
--       ,tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
--       ,tf.A_CODE_PROVISION_FORM
--       ,tf.A_PERIODICITY_CODE
--       ,tf.A_STOPDATE
--       ,priostanov.OUID
--       ,priostanov.A_DATE_FINISH
--       ,priostanov.A_DATEENDFINISH
--       ,NULL STARTDATE_PARCE_LEFT
--       ,NULL LASTDATE_PARCE_LEFT
--       ,NULL STARTDATE_PARCE_RIGHT
--       ,NULL LASTDATE_PARCE_RIGHT
--       ,NULL PREVIOS_ID
--      FROM TEMP_FACT tf
--      INNER JOIN ESRN_SERV_SERV ess
--        ON tf.ID_FACT = ess.GUID
--      /* Берем приостановления со статусом "Приостановление временное" */
--      INNER JOIN WM_STOP_SERVSERV priostanov
--        ON ess.OUID = priostanov.A_SERV
--        AND priostanov.A_TYPE = '10'
--        AND DATEDIFF(DAY, tf.STARTDATE, ISNULL(priostanov.A_DATEENDFINISH, @endDateNull)) >= 0
--        AND DATEDIFF(DAY, priostanov.A_DATE_FINISH, ISNULL(tf.LASTDATE, @endDateNull)) >= 0
--        AND ISNULL(priostanov.A_STATUS, 10) = 10
--      ORDER BY ROW_NUMBER() OVER (PARTITION BY tf.MSZ
--      , tf.LKMSZ
--      , tf.MSPLKNPD
--      , tf.STATUSPRIVELEGE
--      , tf.ID_FACT
--      , tf.PERSON_LG
--      , tf.SERVDATE
--      , tf.STARTDATE
--      , tf.LASTDATE
--      , tf.PERS_GUID
--      , tf.A_AMOUNT
--      , tf.org
--      , tf.A_HASH
--      , tf.A_NON_MONETARY_FORM_AMOUNT
--      , tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
--      , tf.A_CODE_PROVISION_FORM
--      , tf.A_PERIODICITY_CODE, priostanov.A_DATE_FINISH
--      , priostanov.A_DATEENDFINISH
--      ORDER BY priostanov.A_CREATEDATE DESC)
    /*
      /* Дату окончания приостановления обновляем датой ближайшего возобновления */
      UPDATE tf2
      SET A_DATEENDFINISH = DATEADD(DAY, -1, t.A_DATE_FINISH)
      FROM TEMP_FACT_PRIOSTANOV tf2
      INNER JOIN (SELECT
          tf2.A_OUID
         ,MIN(vozob.A_DATE_FINISH) A_DATE_FINISH
        FROM TEMP_FACT_PRIOSTANOV tf2
        INNER JOIN ESRN_SERV_SERV ess
          ON tf2.ID_FACT = ess.GUID
        /* Возобновление */
        LEFT JOIN WM_STOP_SERVSERV_HIST vozob
          ON ess.OUID = vozob.A_SERV
          AND vozob.A_TYPE = '20'
          AND DATEDIFF(DAY, tf2.STARTDATE, ISNULL(vozob.A_DATEENDFINISH, @endDateNull)) >= 0
          AND DATEDIFF(DAY, vozob.A_DATE_FINISH, ISNULL(tf2.LASTDATE, @endDateNull)) >= 0
          AND ISNULL(vozob.A_STATUS, 10) = 10
          AND DATEDIFF(DAY, tf2.A_DATE_FINISH, vozob.A_DATE_FINISH) >= 0
          AND vozob.OUID > tf2.PRIOSTANOV_ID
        WHERE tf2.A_DATEENDFINISH IS NULL
        GROUP BY tf2.A_OUID) t
        ON tf2.A_OUID = t.A_OUID
    */
    DELETE FROM TEMP_FACT_PRIOSTANOV
    WHERE DATEDIFF(DAY, ISNULL(A_DATEENDFINISH, @endDateNull), A_DATE_FINISH) >= 0

    UPDATE tf2
    SET PREVIOS_ID = t.PREVIOS_ID
    FROM TEMP_FACT_PRIOSTANOV tf2
    INNER JOIN (SELECT
        tf2.A_OUID
       ,MAX(tfPrev.A_OUID) PREVIOS_ID
      FROM TEMP_FACT_PRIOSTANOV tf2
      INNER JOIN TEMP_FACT_PRIOSTANOV tfPrev
        ON tf2.ID_FACT = tfPrev.ID_FACT
        AND DATEDIFF(DAY, tf2.STARTDATE, tfPrev.STARTDATE) = 0
        AND DATEDIFF(DAY, ISNULL(tf2.LASTDATE, @endDateNull), ISNULL(tfPrev.LASTDATE, @endDateNull)) = 0
        AND DATEDIFF(DAY, tfPrev.A_DATE_FINISH, tf2.A_DATE_FINISH) > 0
      GROUP BY tf2.A_OUID) t
      ON tf2.A_OUID = t.A_OUID

    /* Исключаем из периода размера назначения периоды приостановов */
    UPDATE tf2
    SET STARTDATE_PARCE_LEFT =
                              CASE
                                WHEN tfPrev.A_OUID IS NOT NULL THEN DATEADD(DAY, 1, tfPrev.A_DATEENDFINISH)
                                ELSE tf2.STARTDATE
                              END
       ,LASTDATE_PARCE_LEFT = DATEADD(DAY, -1, tf2.A_DATE_FINISH)
    FROM TEMP_FACT_PRIOSTANOV tf2
    LEFT JOIN TEMP_FACT_PRIOSTANOV tfPrev
      ON tf2.PREVIOS_ID = tfPrev.A_OUID

    UPDATE tf2
    SET STARTDATE_PARCE_RIGHT = DATEADD(DAY, 1, tf2.A_DATEENDFINISH)

       ,LASTDATE_PARCE_RIGHT =
                              CASE
                                WHEN tfNext.A_OUID IS NOT NULL THEN DATEADD(DAY, -1, tfNext.A_DATE_FINISH)
                                ELSE tf2.LASTDATE
                              END
    FROM TEMP_FACT_PRIOSTANOV tf2
    LEFT JOIN TEMP_FACT_PRIOSTANOV tfNext
      ON tf2.A_OUID = tfNext.PREVIOS_ID

    INSERT INTO #TEMP_FACT_4 (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, STARTDATE_PARCE_LEFT, LASTDATE_PARCE_LEFT, PERS_GUID, A_AMOUNT, org, A_HASH, A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, A_STOPDATE)
      SELECT
        tf.MSZ
       ,tf.LKMSZ
       ,tf.MSPLKNPD
       ,tf.STATUSPRIVELEGE
       ,tf.ID_FACT
       ,tf.PERSON_LG
       ,tf.SERVDATE
       ,tf.STARTDATE
       ,tf.LASTDATE
       ,tf.STARTDATE_PARCE_LEFT
       ,tf.LASTDATE_PARCE_LEFT
       ,tf.PERS_GUID
       ,tf.A_AMOUNT
       ,tf.org
       ,tf.A_HASH
        /* Для неденежных МСП */
       ,tf.A_NON_MONETARY_FORM_AMOUNT
       ,tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
       ,tf.A_CODE_PROVISION_FORM
       ,tf.A_PERIODICITY_CODE
       ,tf.A_STOPDATE

      FROM TEMP_FACT_PRIOSTANOV tf
      WHERE tf.STARTDATE_PARCE_LEFT IS NOT NULL
      UNION
      SELECT
        tf.MSZ
       ,tf.LKMSZ
       ,tf.MSPLKNPD
       ,tf.STATUSPRIVELEGE
       ,tf.ID_FACT
       ,tf.PERSON_LG
       ,tf.SERVDATE
       ,tf.STARTDATE
       ,tf.LASTDATE
       ,tf.STARTDATE_PARCE_RIGHT
       ,tf.LASTDATE_PARCE_RIGHT
       ,tf.PERS_GUID
       ,tf.A_AMOUNT
       ,tf.org
       ,tf.A_HASH
        /* Для неденежных МСП */
       ,tf.A_NON_MONETARY_FORM_AMOUNT
       ,tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
       ,tf.A_CODE_PROVISION_FORM
       ,tf.A_PERIODICITY_CODE
       ,tf.A_STOPDATE
      FROM TEMP_FACT_PRIOSTANOV tf
      WHERE tf.STARTDATE_PARCE_RIGHT IS NOT NULL

    /* Удаляем из первоначальной таблицы те записи, по которым отработали приостанов и дополняем записями с учетом приостановов */
    DELETE tf
      FROM TEMP_FACT tf
    WHERE EXISTS (SELECT
          1
        FROM #TEMP_FACT_4 tf3
        WHERE tf.ID_FACT = tf3.ID_FACT
        AND DATEDIFF(DAY, tf.STARTDATE, tf3.STARTDATE) = 0
        AND DATEDIFF(DAY, ISNULL(tf.LASTDATE, @endDateNull), ISNULL(tf3.LASTDATE, @endDateNull)) = 0)

    /* Удаляем возможные некорректные периоды и периоды больше месяца текущей даты */

    DELETE FROM #TEMP_FACT_4
    WHERE DATEDIFF(DAY, LASTDATE_PARCE_LEFT, STARTDATE_PARCE_LEFT) > 0
    --OR DATEDIFF(MONTH, @getDate, STARTDATE_PARCE_LEFT) > 0

    INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, PERS_GUID, A_AMOUNT, org, A_HASH, A_NON_MONETARY_FORM_AMOUNT,
    A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, A_STOPDATE)
      SELECT
        MSZ
       ,LKMSZ
       ,MSPLKNPD
       ,STATUSPRIVELEGE
       ,ID_FACT
       ,PERSON_LG
       ,SERVDATE
       ,STARTDATE_PARCE_LEFT
       ,LASTDATE_PARCE_LEFT
       ,PERS_GUID
       ,A_AMOUNT
       ,org
       ,A_HASH
        /* Для неденежных МСП */
       ,A_NON_MONETARY_FORM_AMOUNT
       ,A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
       ,A_CODE_PROVISION_FORM
       ,A_PERIODICITY_CODE
       ,A_STOPDATE
      FROM #TEMP_FACT_4
  END
END

/* По ежемесячным МСП делим период факта кратно месяцу. Но перед этим делаем объединение периодов с одинаковыми суммами: такие записи возникают вследствие продления назначения,
  и обрабатываются в дальнейшем некорректно.
*/

CREATE TABLE TEMP_FACT_UNION (
  MSZ INT NULL
 ,LKMSZ INT NULL
 ,MSPLKNPD VARCHAR(50) NULL
 ,STATUSPRIVELEGE INT NULL
 ,ID_FACT VARCHAR(50) NULL
 ,PERSON_LG VARCHAR(50) NULL
 ,SERVDATE DATETIME NULL
 ,STARTDATE DATETIME NULL
 ,LASTDATE DATETIME NULL
 ,SERVPAYAMOUNT_LASTDATE DATETIME NULL
 ,PERS_GUID VARCHAR(5000) NULL
 ,A_AMOUNT FLOAT NULL
 ,org VARCHAR(50) NULL
 ,A_HASH INT NULL
  /* Поля для неденежных МСП */
 ,A_NON_MONETARY_FORM_AMOUNT FLOAT NULL /* Размер (Количество) */
 ,A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT FLOAT NULL /* Эквивалент в рублях */
 ,A_CODE_PROVISION_FORM INT NULL
 ,A_PERIODICITY_CODE INT NULL
 ,A_STOPDATE DATETIME NULL
)

CREATE NONCLUSTERED INDEX IDX_TEMP_FACT_UNION_ID_FACT
ON TEMP_FACT_UNION (ID_FACT)

;
WITH A1 (ID_FACT, ds, num)
AS
(SELECT
    tmp.ID_FACT
   ,MIN(tmp.STARTDATE)
   ,ROW_NUMBER() OVER (PARTITION BY tmp.ID_FACT ORDER BY tmp.A_AMOUNT, tmp.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, MIN(tmp.STARTDATE))
  FROM TEMP_FACT tmp
  WHERE tmp.A_PERIODICITY_CODE = 1
    AND NOT EXISTS (SELECT
      1
    FROM TEMP_FACT
    WHERE tmp.ID_FACT = ID_FACT
    AND ISNULL(tmp.A_AMOUNT, 0) = ISNULL(A_AMOUNT, 0)
    AND ISNULL(tmp.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, 0) = ISNULL(A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, 0)
    AND DATEDIFF(DAY, STARTDATE, tmp.STARTDATE) > 0
    AND DATEDIFF(DAY, tmp.STARTDATE, DATEADD(DAY, 1, LASTDATE)) >= 0)
  GROUP BY tmp.ID_FACT, tmp.A_AMOUNT, tmp.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, tmp.STARTDATE),
B1 (ID_FACT, df, num)
AS
(SELECT
   tmp.ID_FACT
   ,MIN(tmp.LASTDATE)
   ,ROW_NUMBER() OVER (PARTITION BY tmp.ID_FACT ORDER BY tmp.A_AMOUNT, tmp.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, MIN(tmp.LASTDATE))
  FROM TEMP_FACT tmp
  WHERE tmp.A_PERIODICITY_CODE = 1
    AND NOT EXISTS (SELECT
      1
    FROM TEMP_FACT
    WHERE tmp.ID_FACT = ID_FACT
    AND ISNULL(tmp.A_AMOUNT, 0) = ISNULL(A_AMOUNT, 0)
    AND ISNULL(tmp.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, 0) = ISNULL(A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, 0)
    AND DATEDIFF(DAY, STARTDATE, DATEADD(DAY, 1, tmp.LASTDATE)) >= 0
    AND DATEDIFF(DAY, tmp.LASTDATE, LASTDATE) > 0)
  GROUP BY tmp.ID_FACT, tmp.A_AMOUNT, tmp.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, tmp.LASTDATE)


INSERT INTO TEMP_FACT_UNION (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, SERVPAYAMOUNT_LASTDATE, PERS_GUID, A_AMOUNT, org, A_HASH,
  A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, A_STOPDATE)
  SELECT
    tf.MSZ
   ,tf.LKMSZ
   ,tf.MSPLKNPD
   ,tf.STATUSPRIVELEGE
   ,tf.ID_FACT
   ,tf.PERSON_LG
   ,tf.SERVDATE
   ,x.ds STARTDATE
   ,x.df LASTDATE
   ,tf.SERVPAYAMOUNT_LASTDATE
   ,tf.PERS_GUID
   ,tf.A_AMOUNT
   ,tf.org
   ,tf.A_HASH
   ,tf.A_NON_MONETARY_FORM_AMOUNT
   ,tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
   ,tf.A_CODE_PROVISION_FORM
   ,tf.A_PERIODICITY_CODE
   ,tf.A_STOPDATE
  FROM (SELECT
      A1.ID_FACT
     ,A1.ds
     ,B1.df
    FROM A1
    INNER JOIN B1
      ON A1.ID_FACT = B1.ID_FACT
    WHERE A1.num = B1.num) x
  INNER JOIN TEMP_FACT tf
    ON x.ID_FACT = tf.ID_FACT
  WHERE DATEDIFF(DAY, tf.STARTDATE, x.ds) = 0

DELETE tf
  FROM TEMP_FACT tf
WHERE EXISTS (SELECT
      1
    FROM TEMP_FACT_UNION tfu
    WHERE tf.ID_FACT = tfu.ID_FACT)

INSERT INTO TEMP_FACT (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, SERVPAYAMOUNT_LASTDATE, PERS_GUID, A_AMOUNT, org, A_HASH,
A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, A_STOPDATE)
  SELECT
    tfu.MSZ
   ,tfu.LKMSZ
   ,tfu.MSPLKNPD
   ,tfu.STATUSPRIVELEGE
   ,tfu.ID_FACT
   ,tfu.PERSON_LG
   ,tfu.SERVDATE
   ,tfu.STARTDATE
   ,tfu.LASTDATE
   ,tfu.SERVPAYAMOUNT_LASTDATE
   ,tfu.PERS_GUID
   ,tfu.A_AMOUNT
   ,tfu.org
   ,tfu.A_HASH
   ,tfu.A_NON_MONETARY_FORM_AMOUNT
   ,tfu.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
   ,tfu.A_CODE_PROVISION_FORM
   ,tfu.A_PERIODICITY_CODE
   ,tfu.A_STOPDATE
  FROM TEMP_FACT_UNION tfu

CREATE TABLE EGISSO_FACT_MONTH_RAYON (
  A_OUID INT IDENTITY (1, 1) NOT NULL PRIMARY KEY CLUSTERED
 ,A_GUID_SERV VARCHAR(255) NULL
 ,d1 DATETIME NULL
 ,d2 DATETIME NULL
  /* Атрибут "Сумма", если "Денежная форма" */
 ,A_MONETARY_FORM_AMOUNT FLOAT NULL
  /* Размер (Количество) */
 ,A_NON_MONETARY_FORM_AMOUNT FLOAT NULL
  /* Атрибут "Эквивалент в рублях", если "Натуральная форма" или "Льгота" */
 ,A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT FLOAT NULL
 ,FACT_GUID VARCHAR(255) NULL
 ,MSZ INT NULL
 ,LKMSZ INT NULL
 ,STARTDATE DATETIME NULL
 ,LASTDATE DATETIME NULL
 ,SERVPAYAMOUNT_LASTDATE DATETIME NULL
)

IF NOT EXISTS (SELECT
      1
    FROM sys.indexes
    WHERE name = 'P_INDX_EGISSO_FACT_MONTH_RAYON_GUID_SERV'
    AND object_id = OBJECT_ID('EGISSO_FACT_MONTH_RAYON'))
BEGIN
  CREATE INDEX P_INDX_EGISSO_FACT_MONTH_RAYON_GUID_SERV ON EGISSO_FACT_MONTH_RAYON (A_GUID_SERV)
END


DECLARE @endDateLastDay DATETIME
SET @endDateLastDay = DATEADD(MONTH, 1, @end_date) - DAY(DATEADD(MONTH, 1, @end_date))

/*IF OBJECT_ID('spt_values_number_egisso', 'U') IS NOT NULL
  DROP TABLE spt_values_number_egisso

CREATE TABLE spt_values_number_egisso (
  A_OUID INT IDENTITY (1, 1) NOT NULL PRIMARY KEY CLUSTERED
 ,number INT NOT NULL
)

INSERT INTO spt_values_number_egisso (number)
  SELECT
    number
  FROM master..spt_values
  WHERE type = 'P'*/

UPDATE TEMP_FACT
SET SERVPAYAMOUNT_LASTDATE = LASTDATE

UPDATE TEMP_FACT
SET LASTDATE = DATEADD(MONTH, 1, x.A_DATE_FINISH)
FROM (SELECT TOP 1 WITH TIES
    tf.ID_FACT
   ,tf.STARTDATE
   ,store.A_DATE_FINISH
  FROM TEMP_FACT tf
  INNER JOIN EGISSO_NEW_STORE store
    ON tf.ID_FACT = store.A_SERV_GUID

  WHERE tf.LASTDATE IS NULL
  AND tf.A_PERIODICITY_CODE = 1
  AND store.A_STATUS = 10

  ORDER BY ROW_NUMBER() OVER (PARTITION BY store.A_SERV_GUID
  ORDER BY store.A_DATE_START DESC)) x
INNER JOIN TEMP_FACT tf
  ON x.ID_FACT = tf.ID_FACT
WHERE DATEDIFF(DAY, tf.STARTDATE, x.STARTDATE) = 0

UPDATE TEMP_FACT
SET LASTDATE = DATEADD(MONTH, 1, STARTDATE) - DAY(DATEADD(MONTH, 1, STARTDATE))
WHERE A_PERIODICITY_CODE = 1
AND LASTDATE IS NULL
--OR DATEDIFF(DAY, @endDateLastDay, LASTDATE) > 0)


INSERT INTO EGISSO_FACT_MONTH_RAYON (A_GUID_SERV, d1, d2, A_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, MSZ, LKMSZ, STARTDATE, LASTDATE, SERVPAYAMOUNT_LASTDATE)
  SELECT
    tf.ID_FACT
   ,tf.STARTDATE d1
   ,tf.LASTDATE d2
   ,tf.A_AMOUNT
   ,tf.A_NON_MONETARY_FORM_AMOUNT
   ,tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
   ,tf.MSZ
   ,tf.LKMSZ
   ,tf.STARTDATE
   ,tf.LASTDATE
   ,tf.SERVPAYAMOUNT_LASTDATE
  FROM TEMP_FACT tf
  WHERE tf.A_PERIODICITY_CODE = 1
  AND DATEDIFF(MONTH, tf.STARTDATE, tf.LASTDATE) = 0

INSERT INTO EGISSO_FACT_MONTH_RAYON (A_GUID_SERV, d1, d2, A_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, MSZ, LKMSZ, STARTDATE, LASTDATE, SERVPAYAMOUNT_LASTDATE)
  SELECT
    tf.ID_FACT
   ,DATEADD(mm, DATEDIFF(mm, @startDateNull, tf.STARTDATE) + number, @startDateNull) d1
   ,DATEADD(mm, DATEDIFF(mm, @startDateNull, tf.STARTDATE) + number + 1, @startDateNull) - 1 d2
   ,tf.A_AMOUNT
   ,tf.A_NON_MONETARY_FORM_AMOUNT
   ,tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
   ,tf.MSZ
   ,tf.LKMSZ
   ,tf.STARTDATE
   ,tf.LASTDATE
   ,tf.SERVPAYAMOUNT_LASTDATE
  FROM TEMP_FACT tf
  CROSS JOIN spt_values_number_egisso
  WHERE tf.A_PERIODICITY_CODE = 1
  AND DATEDIFF(MONTH, tf.STARTDATE, tf.LASTDATE) > 0
  AND number <= DATEDIFF(mm, tf.STARTDATE, tf.LASTDATE)


UPDATE EGISSO_FACT_MONTH_RAYON
SET d1 = STARTDATE
WHERE DATEDIFF(DAY, d1, STARTDATE) > 0

UPDATE EGISSO_FACT_MONTH_RAYON
SET d2 = LASTDATE
WHERE DATEDIFF(DAY, LASTDATE, d2) > 0

--/* Удаление фактов с периодами менее даты начала сбора (@start_date) */
--DELETE FROM EGISSO_FACT_MONTH_RAYON
--WHERE DATEDIFF(MONTH, d2, @start_date) > 0

UPDATE EGISSO_FACT_MONTH_RAYON
SET d1 = DATEADD(HOUR, 12, CAST(FLOOR(CAST(d1 AS FLOAT)) AS DATETIME))
   ,d2 = DATEADD(HOUR, 12, CAST(FLOOR(CAST(d2 AS FLOAT)) AS DATETIME))

CREATE TABLE TEMP_FACT4 (
  MSZ INT NULL
 ,LKMSZ INT NULL
 ,MSPLKNPD VARCHAR(50) NULL
 ,STATUSPRIVELEGE INT NULL
 ,ID_FACT VARCHAR(50) NULL
 ,PERSON_LG VARCHAR(50) NULL
 ,SERVDATE DATETIME NULL
 ,STARTDATE DATETIME NULL
 ,LASTDATE DATETIME NULL
 ,SERVPAYAMOUNT_LASTDATE DATETIME NULL
 ,PERS_GUID VARCHAR(5000) NULL
 ,A_AMOUNT FLOAT NULL
 ,org VARCHAR(50) NULL
 ,A_HASH INT NULL
  /* Поля для неденежных МСП */
 ,A_NON_MONETARY_FORM_AMOUNT FLOAT NULL /* Размер (Количество) */
 ,A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT FLOAT NULL /* Эквивалент в рублях */
 ,A_CODE_PROVISION_FORM INT NULL
 ,A_PERIODICITY_CODE INT NULL
 ,A_STOPDATE DATETIME NULL
 ,IS_TERMINATION_REL_MSP BIT NULL
)

CREATE INDEX IDX_TEMP_FACT4_ID_FACT_A_PERIODICITY_CODE
ON TEMP_FACT4 (ID_FACT, A_PERIODICITY_CODE)
ON [PRIMARY]

CREATE INDEX IDX_TEMP_FACT4_A_PERIODICITY_CODE
ON TEMP_FACT4 (A_PERIODICITY_CODE)
INCLUDE (ID_FACT)

INSERT INTO TEMP_FACT4 (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, SERVPAYAMOUNT_LASTDATE, PERS_GUID, A_AMOUNT, org, A_HASH, A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, A_STOPDATE)
  SELECT
    x.MSZ
   ,x.LKMSZ
   ,x.MSPLKNPD
   ,x.STATUSPRIVELEGE
   ,x.ID_FACT
   ,x.PERSON_LG
   ,x.SERVDATE
   ,x.STARTDATE
   ,x.LASTDATE
   ,MIN(x.SERVPAYAMOUNT_LASTDATE)
   ,x.PERS_GUID
   ,SUM(x.A_AMOUNT)
   ,x.org
   ,x.A_HASH
   ,x.A_NON_MONETARY_FORM_AMOUNT
   ,x.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
   ,x.A_CODE_PROVISION_FORM
   ,x.A_PERIODICITY_CODE
   ,x.A_STOPDATE
  FROM (SELECT DISTINCT
      ISNULL(efm.MSZ, tf.MSZ) MSZ
     ,ISNULL(efm.LKMSZ, tf.LKMSZ) LKMSZ
     ,tf.MSPLKNPD
     ,tf.STATUSPRIVELEGE
     ,tf.ID_FACT
     ,tf.PERSON_LG
     ,tf.SERVDATE
     ,CASE
        WHEN efm.A_GUID_SERV IS NOT NULL THEN efm.d1
        ELSE tf.STARTDATE
      END STARTDATE
     ,CASE
        WHEN efm.A_GUID_SERV IS NOT NULL THEN efm.d2
        ELSE tf.LASTDATE
      END LASTDATE
     ,CASE
        WHEN efm.A_GUID_SERV IS NOT NULL THEN efm.SERVPAYAMOUNT_LASTDATE
        ELSE tf.SERVPAYAMOUNT_LASTDATE
      END SERVPAYAMOUNT_LASTDATE
     ,tf.PERS_GUID
     ,CASE
        WHEN efm.A_GUID_SERV IS NOT NULL THEN efm.A_MONETARY_FORM_AMOUNT
        ELSE tf.A_AMOUNT
      END A_AMOUNT
     ,tf.org
     ,NULL A_HASH
     ,CASE
        WHEN efm.A_GUID_SERV IS NOT NULL THEN efm.A_NON_MONETARY_FORM_AMOUNT
        ELSE tf.A_NON_MONETARY_FORM_AMOUNT
      END A_NON_MONETARY_FORM_AMOUNT
     ,CASE
        WHEN efm.A_GUID_SERV IS NOT NULL THEN efm.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
        ELSE tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
      END A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
     ,tf.A_CODE_PROVISION_FORM
     ,tf.A_PERIODICITY_CODE
     ,tf.A_STOPDATE
    FROM TEMP_FACT tf
    LEFT JOIN EGISSO_FACT_MONTH_RAYON efm
      ON tf.ID_FACT = efm.A_GUID_SERV) x

  GROUP BY x.MSZ
          ,x.LKMSZ
          ,x.MSPLKNPD
          ,x.STATUSPRIVELEGE
          ,x.ID_FACT
          ,x.PERSON_LG
          ,x.SERVDATE
          ,x.STARTDATE
          ,x.LASTDATE
          ,x.PERS_GUID
          ,x.org
          ,x.A_HASH
          ,x.A_NON_MONETARY_FORM_AMOUNT
          ,x.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
          ,x.A_CODE_PROVISION_FORM
          ,x.A_PERIODICITY_CODE
          ,x.A_STOPDATE


--DECLARE @mspStopType VARCHAR(255)
SELECT
  @mspStopType = dataType.LOGICNAME
FROM SXATTR attr
INNER JOIN SXDATATYPE dataType
  ON attr.OUIDDATATYPE = dataType.OUID
WHERE attr.[NAME] = 'mspStop'
  AND attr.OUIDSXCLASS = (SELECT s.OUID FROM SXCLASS s WHERE s.[NAME] = 'esrnServServ')

IF (@mspStopType = 'ObjectsList')
BEGIN
  EXECUTE ('
  UPDATE TEMP_FACT4
  SET A_STOPDATE = ess.A_STOPDATE
     ,IS_TERMINATION_REL_MSP =
                              CASE
                                WHEN stopServ.OUID IS NULL OR
                                  sr.A_NAME != ''Прекращение в связи с назначением связанной МСП'' THEN 0
                                ELSE 1
                              END
  FROM TEMP_FACT4
  INNER JOIN ESRN_SERV_SERV ess
    ON ID_FACT = ess.GUID
  LEFT JOIN SPR_STOPSERV_ESRNSERVSERV linkEsrnStop
  INNER JOIN WM_STOP_SERVSERV stopServ
    ON linkEsrnStop.TOID = stopServ.OUID
    AND stopServ.A_TYPE = ''15''
    AND ISNULL(stopServ.A_STATUS, 10) = 10
  INNER JOIN SPR_REFUSE sr
    ON stopServ.A_REASON = sr.OUID
    ON ess.OUID = linkEsrnStop.FROMID
  WHERE DATEDIFF(DAY, STARTDATE, ess.A_STOPDATE) > 0
  AND DATEDIFF(DAY, ess.A_STOPDATE, ISNULL(LASTDATE, CONVERT(DATETIME, ''3000-01-01'', 120))) >= 0')
END
ELSE
BEGIN
  EXECUTE ('
  UPDATE TEMP_FACT4
  SET A_STOPDATE = ess.A_STOPDATE
     ,IS_TERMINATION_REL_MSP =
                              CASE
                                WHEN stopServ.OUID IS NULL OR
                                  sr.A_NAME != ''Прекращение в связи с назначением связанной МСП'' THEN 0
                                ELSE 1
                              END
  FROM TEMP_FACT4
  INNER JOIN ESRN_SERV_SERV ess
    ON ID_FACT = ess.GUID
  LEFT JOIN WM_STOP_SERVSERV stopServ
  INNER JOIN SPR_REFUSE sr
    ON stopServ.A_REASON = sr.OUID

    ON ess.OUID = stopServ.A_SERV
    AND stopServ.A_TYPE = ''15''
    AND ISNULL(stopServ.A_STATUS, 10) = 10
  WHERE DATEDIFF(DAY, STARTDATE, ess.A_STOPDATE) > 0
  AND DATEDIFF(DAY, ess.A_STOPDATE, ISNULL(LASTDATE, CONVERT(DATETIME, ''3000-01-01'', 120))) >= 0
    ')
END


IF OBJECT_ID('EGISSO_NEW_TEMP_STORE', 'U') IS NOT NULL
  DROP TABLE EGISSO_NEW_TEMP_STORE

CREATE TABLE EGISSO_NEW_TEMP_STORE (
  ID_FACT VARCHAR(255) NULL
 ,d1 DATETIME NULL
 ,d2 DATETIME NULL
 ,A_AMOUNT FLOAT NULL
 ,A_EQUIVALENT_AMOUNT FLOAT NULL
 ,A_DATE_START DATETIME NULL
 ,A_DATE_FINISH DATETIME NULL
)

CREATE NONCLUSTERED INDEX IDX_EGISSO_NEW_TEMP_STORE_ID_FACT
ON EGISSO_NEW_TEMP_STORE (ID_FACT)

--INSERT INTO EGISSO_NEW_TEMP_STORE (ID_FACT, d1, d2, A_AMOUNT, A_EQUIVALENT_AMOUNT, A_DATE_START, A_DATE_FINISH)
--  SELECT DISTINCT
--    tf.ID_FACT
--   ,store.A_DATE_START
--   ,store.A_DATE_FINISH
--   ,store.A_AMOUNT
--   ,store.A_EQUIVALENT_AMOUNT
--   ,NULL
--   ,NULL
--  FROM TEMP_FACT4 tf
--  INNER JOIN EGISSO_NEW_STORE store
--    ON tf.ID_FACT = store.A_SERV_GUID
--  WHERE tf.A_PERIODICITY_CODE = 1
--  AND DATEDIFF(MONTH, store.A_DATE_START, ISNULL(store.A_DATE_FINISH, @endDateNull)) = 0
--  AND ISNULL(store.A_STATUS, 10) = 10

INSERT INTO EGISSO_NEW_TEMP_STORE (ID_FACT, d1, d2, A_AMOUNT, A_EQUIVALENT_AMOUNT, A_DATE_START, A_DATE_FINISH)
  SELECT DISTINCT
    tf.ID_FACT
   ,DATEADD(mm, DATEDIFF(mm, @startDateNull, store.A_DATE_START) + number, @startDateNull) d1
   ,DATEADD(mm, DATEDIFF(mm, @startDateNull, store.A_DATE_START) + number + 1, @startDateNull) - 1 d2
   ,store.A_AMOUNT
   ,store.A_EQUIVALENT_AMOUNT
   ,store.A_DATE_START
   ,ISNULL(store.A_DATE_FINISH, DATEADD(MONTH, 1, store.A_DATE_START) - DAY(DATEADD(MONTH, 1, store.A_DATE_START))) A_DATE_FINISH
  FROM TEMP_FACT4 tf
  INNER JOIN EGISSO_NEW_STORE store
    ON tf.ID_FACT = store.A_SERV_GUID
  CROSS JOIN spt_values_number_egisso
  WHERE tf.A_PERIODICITY_CODE = 1
  AND DATEDIFF(MONTH, store.A_DATE_START, ISNULL(store.A_DATE_FINISH, DATEADD(MONTH, 1, store.A_DATE_START))) > 0
  AND number <= DATEDIFF(mm, store.A_DATE_START, ISNULL(store.A_DATE_FINISH, store.A_DATE_START))
  AND ISNULL(store.A_STATUS, 10) = 10

UPDATE EGISSO_NEW_TEMP_STORE
SET d1 = A_DATE_START
WHERE DATEDIFF(DAY, d1, A_DATE_START) > 0

UPDATE EGISSO_NEW_TEMP_STORE
SET d2 = A_DATE_FINISH
WHERE DATEDIFF(DAY, A_DATE_FINISH, d2) > 0


/* Удаляем уже существующие в массиве факты, при этом передаем на центр факты с пометкой о прекращении, для того, чтобы удалить факты больше даты прекращения (если они ранее были загружены) */
DELETE tf
  FROM TEMP_FACT4 tf
WHERE tf.A_CODE_PROVISION_FORM = 1
  AND tf.A_PERIODICITY_CODE = 1
  AND tf.A_STOPDATE IS NULL
  AND EXISTS (SELECT
      1
    FROM EGISSO_NEW_TEMP_STORE store
    WHERE tf.ID_FACT = store.ID_FACT
    AND DATEDIFF(DAY, tf.STARTDATE, store.d1) = 0
    AND DATEDIFF(DAY, ISNULL(tf.LASTDATE, @endDateNull), ISNULL(store.d2, @endDateNull)) = 0
    AND tf.A_AMOUNT = ISNULL(store.A_AMOUNT, 0))

DELETE tf
  FROM TEMP_FACT4 tf
WHERE tf.A_CODE_PROVISION_FORM = 1
  AND tf.A_PERIODICITY_CODE = 1
  AND tf.A_STOPDATE IS NULL
  AND EXISTS (SELECT
      1
    FROM EGISSO_NEW_TEMP_STORE store
    WHERE tf.ID_FACT = store.ID_FACT
    AND DATEDIFF(DAY, tf.STARTDATE, store.d1) = 0
    AND DATEDIFF(DAY, ISNULL(tf.SERVPAYAMOUNT_LASTDATE, @endDateNull), ISNULL(store.d2, @endDateNull)) = 0
    AND tf.A_AMOUNT = ISNULL(store.A_AMOUNT, 0))

DELETE tf
  FROM TEMP_FACT4 tf
WHERE tf.A_CODE_PROVISION_FORM IN (2, 3)
  AND tf.A_PERIODICITY_CODE = 1
  AND tf.A_STOPDATE IS NULL
  AND EXISTS (SELECT
      1
    FROM EGISSO_NEW_TEMP_STORE store
    WHERE tf.ID_FACT = store.ID_FACT
    AND DATEDIFF(DAY, tf.STARTDATE, store.d1) = 0
    AND DATEDIFF(DAY, ISNULL(tf.LASTDATE, @endDateNull), ISNULL(store.d2, @endDateNull)) = 0
    AND tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT = ISNULL(store.A_EQUIVALENT_AMOUNT, 0))

DELETE tf
  FROM TEMP_FACT4 tf
WHERE tf.A_CODE_PROVISION_FORM IN (2, 3)
  AND tf.A_PERIODICITY_CODE = 1
  AND tf.A_STOPDATE IS NULL
  AND EXISTS (SELECT
      1
    FROM EGISSO_NEW_TEMP_STORE store
    WHERE tf.ID_FACT = store.ID_FACT
    AND DATEDIFF(DAY, tf.STARTDATE, store.d1) = 0
    AND DATEDIFF(DAY, ISNULL(tf.SERVPAYAMOUNT_LASTDATE, @endDateNull), ISNULL(store.d2, @endDateNull)) = 0
    AND tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT = ISNULL(store.A_EQUIVALENT_AMOUNT, 0))

DELETE tf
  FROM TEMP_FACT4 tf
WHERE tf.A_CODE_PROVISION_FORM = 1
--  AND tf.A_PERIODICITY_CODE != 1
  AND tf.A_STOPDATE IS NULL
  AND EXISTS (SELECT
      1
    FROM EGISSO_NEW_STORE store
    WHERE tf.ID_FACT = store.A_SERV_GUID
    AND DATEDIFF(DAY, tf.STARTDATE, store.A_DATE_START) = 0
    AND DATEDIFF(DAY, ISNULL(tf.LASTDATE, @endDateNull), ISNULL(store.A_DATE_FINISH, @endDateNull)) = 0
    AND tf.A_AMOUNT = ISNULL(store.A_AMOUNT, 0)
    AND ISNULL(store.A_STATUS, 10) = 10)

DELETE tf
  FROM TEMP_FACT4 tf
WHERE tf.A_CODE_PROVISION_FORM IN (2, 3)
--  AND tf.A_PERIODICITY_CODE != 1
  AND tf.A_STOPDATE IS NULL
  AND EXISTS (SELECT
      1
    FROM EGISSO_NEW_STORE store
    WHERE tf.ID_FACT = store.A_SERV_GUID
    AND DATEDIFF(DAY, tf.STARTDATE, store.A_DATE_START) = 0
    AND DATEDIFF(DAY, ISNULL(tf.LASTDATE, @endDateNull), ISNULL(store.A_DATE_FINISH, @endDateNull)) = 0
    AND tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT = ISNULL(store.A_EQUIVALENT_AMOUNT, 0)
    AND ISNULL(store.A_STATUS, 10) = 10)

/* Удаление фактов с периодами менее даты начала сбора (@start_date) */
DELETE FROM TEMP_FACT4
WHERE DATEDIFF(MONTH, LASTDATE, @start_date) > 0
  AND A_PERIODICITY_CODE = 1
  AND SERVPAYAMOUNT_LASTDATE IS NOT NULL

/* Объединение интервалов */
IF OBJECT_ID(N'TEMP_FACT5', 'U') IS NOT NULL
  DROP TABLE TEMP_FACT5

CREATE TABLE TEMP_FACT5 (
  MSZ INT NULL
 ,LKMSZ INT NULL
 ,MSPLKNPD VARCHAR(50) NULL
 ,STATUSPRIVELEGE INT NULL
 ,ID_FACT VARCHAR(50) NULL
 ,PERSON_LG VARCHAR(50) NULL
 ,SERVDATE DATETIME NULL
 ,STARTDATE DATETIME NULL
 ,LASTDATE DATETIME NULL
 ,SERVPAYAMOUNT_LASTDATE DATETIME NULL
 ,PERS_GUID VARCHAR(5000) NULL
 ,A_AMOUNT FLOAT NULL
 ,org VARCHAR(50) NULL
 ,A_HASH INT NULL
  /* Поля для неденежных МСП */
 ,A_NON_MONETARY_FORM_AMOUNT FLOAT NULL /* Размер (Количество) */
 ,A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT FLOAT NULL /* Эквивалент в рублях */
 ,A_CODE_PROVISION_FORM INT NULL
 ,A_PERIODICITY_CODE INT NULL
 ,A_STOPDATE DATETIME NULL
 ,IS_TERMINATION_REL_MSP BIT NULL
 ,IS_DELETE BIT NOT NULL
)

;
WITH A (ID_FACT, ds, num)
AS
(SELECT
    tmp.ID_FACT
   ,MIN(tmp.STARTDATE)
   ,ROW_NUMBER() OVER (PARTITION BY tmp.ID_FACT ORDER BY tmp.A_AMOUNT, tmp.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, MIN(tmp.STARTDATE))
  FROM TEMP_FACT4 tmp
  WHERE NOT EXISTS (SELECT
      1
    FROM TEMP_FACT4
    WHERE tmp.ID_FACT = ID_FACT
    AND ISNULL(tmp.A_AMOUNT, 0) = ISNULL(A_AMOUNT, 0)
    AND ISNULL(tmp.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, 0) = ISNULL(A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, 0)
    AND DATEDIFF(DAY, STARTDATE, tmp.STARTDATE) > 0
    AND DATEDIFF(DAY, tmp.STARTDATE, DATEADD(DAY, 1, LASTDATE)) >= 0)
  GROUP BY tmp.ID_FACT, tmp.A_AMOUNT, tmp.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, tmp.STARTDATE),
B (ID_FACT, df, num)
AS
(SELECT
   tmp.ID_FACT
   ,MIN(tmp.LASTDATE)
   ,ROW_NUMBER() OVER (PARTITION BY tmp.ID_FACT ORDER BY tmp.A_AMOUNT, tmp.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, MIN(tmp.LASTDATE))
  FROM TEMP_FACT4 tmp
  WHERE NOT EXISTS (SELECT
      1
    FROM TEMP_FACT4
    WHERE tmp.ID_FACT = ID_FACT
    AND ISNULL(tmp.A_AMOUNT, 0) = ISNULL(A_AMOUNT, 0)
    AND ISNULL(tmp.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, 0) = ISNULL(A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, 0)
    AND DATEDIFF(DAY, STARTDATE, DATEADD(DAY, 1, tmp.LASTDATE)) >= 0
    AND DATEDIFF(DAY, tmp.LASTDATE, LASTDATE) > 0)
  GROUP BY tmp.ID_FACT, tmp.A_AMOUNT, tmp.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, tmp.LASTDATE)


INSERT INTO TEMP_FACT5 (MSZ, LKMSZ, MSPLKNPD, STATUSPRIVELEGE, ID_FACT, PERSON_LG, SERVDATE, STARTDATE, LASTDATE, SERVPAYAMOUNT_LASTDATE, PERS_GUID, A_AMOUNT, org, A_HASH,
A_NON_MONETARY_FORM_AMOUNT, A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT, A_CODE_PROVISION_FORM, A_PERIODICITY_CODE, A_STOPDATE, IS_TERMINATION_REL_MSP, IS_DELETE)
  SELECT
    tf.MSZ
   ,tf.LKMSZ
   ,tf.MSPLKNPD
   ,tf.STATUSPRIVELEGE
   ,tf.ID_FACT
   ,tf.PERSON_LG
   ,tf.SERVDATE
   ,x.ds STARTDATE
   ,x.df LASTDATE
   ,tf.SERVPAYAMOUNT_LASTDATE
   ,tf.PERS_GUID
   ,tf.A_AMOUNT
   ,tf.org
   ,tf.A_HASH
   ,tf.A_NON_MONETARY_FORM_AMOUNT
   ,tf.A_NON_MONETARY_FORM_EQUIVALENT_AMOUNT
   ,tf.A_CODE_PROVISION_FORM
   ,tf.A_PERIODICITY_CODE
   ,tf.A_STOPDATE
   ,tf.IS_TERMINATION_REL_MSP
   ,0
  FROM (SELECT
      A.ID_FACT
     ,A.ds
     ,B.df
    FROM A
    INNER JOIN B
      ON A.ID_FACT = B.ID_FACT
    WHERE A.num = B.num) x
  INNER JOIN TEMP_FACT4 tf
    ON x.ID_FACT = tf.ID_FACT
  WHERE DATEDIFF(DAY, tf.STARTDATE, x.ds) = 0

IF (@mspStopType = 'ObjectsList')
BEGIN
  EXECUTE ('
UPDATE TEMP_FACT5
SET A_STOPDATE = ess.A_STOPDATE
,IS_TERMINATION_REL_MSP =
CASE
WHEN stopServ.OUID IS NULL OR
sr.A_NAME != ''Прекращение в связи с назначением связанной МСП'' THEN 0
ELSE 1
END
FROM TEMP_FACT5
INNER JOIN ESRN_SERV_SERV ess
ON ID_FACT = ess.GUID
LEFT JOIN SPR_STOPSERV_ESRNSERVSERV linkEsrnStop
INNER JOIN WM_STOP_SERVSERV stopServ
ON linkEsrnStop.TOID = stopServ.OUID
AND stopServ.A_TYPE = ''15''
AND ISNULL(stopServ.A_STATUS, 10) = 10
INNER JOIN SPR_REFUSE sr
ON stopServ.A_REASON = sr.OUID
ON ess.OUID = linkEsrnStop.FROMID
WHERE DATEDIFF(DAY, STARTDATE, ess.A_STOPDATE) > 0
AND DATEDIFF(DAY, ess.A_STOPDATE, ISNULL(LASTDATE, CONVERT(DATETIME, ''3000-01-01'', 120))) >= 0')
END
ELSE
BEGIN
  EXECUTE ('
UPDATE TEMP_FACT5
SET A_STOPDATE = ess.A_STOPDATE
,IS_TERMINATION_REL_MSP =
CASE
WHEN stopServ.OUID IS NULL OR
sr.A_NAME != ''Прекращение в связи с назначением связанной МСП'' THEN 0
ELSE 1
END
FROM TEMP_FACT5
INNER JOIN ESRN_SERV_SERV ess
ON ID_FACT = ess.GUID
LEFT JOIN WM_STOP_SERVSERV stopServ
INNER JOIN SPR_REFUSE sr
ON stopServ.A_REASON = sr.OUID

ON ess.OUID = stopServ.A_SERV
AND stopServ.A_TYPE = ''15''
AND ISNULL(stopServ.A_STATUS, 10) = 10
WHERE DATEDIFF(DAY, STARTDATE, ess.A_STOPDATE) > 0
AND DATEDIFF(DAY, ess.A_STOPDATE, ISNULL(LASTDATE, CONVERT(DATETIME, ''3000-01-01'', 120))) >= 0
')
END

UPDATE tf
SET LASTDATE = SERVPAYAMOUNT_LASTDATE
FROM TEMP_FACT5 tf
WHERE DATEDIFF(MONTH, tf.LASTDATE, ISNULL(tf.SERVPAYAMOUNT_LASTDATE, @endDateNull)) > 0
AND NOT EXISTS (SELECT
    1
  FROM TEMP_FACT5
  WHERE tf.ID_FACT = ID_FACT
  AND DATEDIFF(DAY, tf.LASTDATE, LASTDATE) > 0)

--AND NOT EXISTS (SELECT
--      1
--    FROM EGISSO_NEW_STORE store
--    WHERE tf.ID_FACT = store.A_SERV_GUID
--    AND DATEDIFF(MONTH, tf.STARTDATE, store.A_DATE_START) > 0
--    AND ISNULL(store.A_STATUS, 10) = 10)


INSERT INTO EGISSO_NEW_PARAM_COLLECT_FACT (A_GUID_SERV)
  SELECT ID_FACT FROM TEMP_FACT5

/* 8.6.3.	Если на районном сегменте удалено назначение, по которому размеры загружены в ЕГИССО, то по данным размерам должны быть сформированы факты на удаление. */
IF OBJECT_ID('WM_EL_CERTIFICATE', 'U') IS NOT NULL
BEGIN
  INSERT INTO TEMP_FACT5 (ID_FACT, IS_DELETE)
    SELECT DISTINCT
      store.A_SERV_GUID ID_FACT
     ,1
    FROM EGISSO_NEW_STORE store
    WHERE NOT EXISTS (SELECT
        1
      FROM ESRN_SERV_SERV ess
      WHERE store.A_SERV_GUID = ess.GUID
      AND ISNULL(ess.A_STATUS, 10) = 10)
    AND NOT EXISTS (SELECT
        1
      FROM WM_EL_CERTIFICATE_BASE cert
      WHERE store.A_CERT = cert.A_OUID
      AND ISNULL(cert.A_STATUS, 10) = 10)
    AND ISNULL(store.A_STATUS, 10) = 10
END
ELSE
BEGIN
  INSERT INTO TEMP_FACT5 (ID_FACT, IS_DELETE)
    SELECT DISTINCT
      store.A_SERV_GUID ID_FACT
     ,1
    FROM EGISSO_NEW_STORE store
    WHERE NOT EXISTS (SELECT
        1
      FROM ESRN_SERV_SERV ess
      WHERE store.A_SERV_GUID = ess.GUID
      AND ISNULL(ess.A_STATUS, 10) = 10)
    AND ISNULL(store.A_STATUS, 10) = 10
END


SELECT *, '#RAYOUID#' A_RAY_ID FROM TEMP_FACT5

/* Кусок кода также используется в настройке Сбор фактов с произвольной привязкой МСП-ЛК-НПД КОНЕЦ */